<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>setTimeout,promise,async await的区别</title>
      <link href="/2019/09/14/awat/"/>
      <url>/2019/09/14/awat/</url>
      
        <content type="html"><![CDATA[<p>一道面试题引发的血案，下面进入主题：</p><pre><code class="js">// 今日头条面试题async function async1() {    console.log(&#39;async1 start&#39;)    await async2()    console.log(&#39;async1 end&#39;)}async function async2() {    console.log(&#39;async2&#39;)}console.log(&#39;script start&#39;)setTimeout(function () {    console.log(&#39;settimeout&#39;)})async1()new Promise(function (resolve) {    console.log(&#39;promise1&#39;)    resolve()}).then(function () {    console.log(&#39;promise2&#39;)})console.log(&#39;script end&#39;)</code></pre><p>题目的本质，就是考察<code>setTimeout</code>、<code>promise</code>、<code>async await</code>的实现及执行顺序，以及JS的事件循环的相关问题。</p><p>答案：</p><pre><code class="js">script startasync1 startasync2promise1script endasync1 endpromise2settimeout</code></pre><p>再看一个经典的例子：</p><pre><code class="js">const p = Promise.resolve();(async () =&gt; {    await p;    console.log(&#39;await end&#39;);})();p.then(() =&gt; {    console.log(&#39;then 1&#39;);}).then(() =&gt; {    console.log(&#39;then 2&#39;);});</code></pre><p>答案：</p><pre><code class="js">then 1then 2await end</code></pre><p>你答对了吗？这里涉及到<code>Microtasks</code>、<code>Macrotasks</code>、event loop 以及 JS 的异步运行机制。</p><h3 id="一、event-loop"><a href="#一、event-loop" class="headerlink" title="一、event loop"></a>一、event loop</h3><p>JS主线程不断的循环往复的从任务队列中读取任务，执行任务，其中运行机制称为事件循环（event loop）。</p><h3 id="二、Microtasks、Macrotasks（task）"><a href="#二、Microtasks、Macrotasks（task）" class="headerlink" title="二、Microtasks、Macrotasks（task）"></a>二、Microtasks、Macrotasks（task）</h3><p>在高层次上，JavaScript 中有 <strong>microtasks</strong> 和 <strong>macrotasks（task）</strong>，它们是异步任务的一种类型，<code>Microtasks</code>的优先级要高于<code>macrotasks</code>，microtasks 用于处理 I/O 和计时器等事件，每次执行一个。microtask 为 <code>async</code>/<code>await</code> 和 Promise 实现延迟执行，并在每个 task 结束时执行。在每一个事件循环之前，microtask 队列总是被清空（执行）。</p><p><a href="https://camo.githubusercontent.com/daa23b38107f20829df9c655fb700a17917f2ca6/68747470733a2f2f76382e6a732e636e2f5f696d672f666173742d6173796e632f6d6963726f7461736b732d76732d7461736b732e737667" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/daa23b38107f20829df9c655fb700a17917f2ca6/68747470733a2f2f76382e6a732e636e2f5f696d672f666173742d6173796e632f6d6963726f7461736b732d76732d7461736b732e737667" alt="microtasks-vs-tasks"></a></p><p><strong>图1: 微任务和任务之间的区别</strong></p><p>下面是它们所包含的api：</p><ul><li>microtasks<ul><li>process.nextTick</li><li>promise</li><li>Object.observe (废弃)</li><li>MutationObserver</li></ul></li><li>macrotasks<ul><li>setTimeout</li><li>setImmediate</li><li>setInterval</li><li>I/O</li><li>UI 渲染</li></ul></li></ul><p><strong>注意：</strong></p><ol><li>每一个 event loop 都有一个 microtask queue</li><li>每个 event loop 会有一个或多个macrotask queue ( 也可以称为task queue )</li><li>一个任务 task 可以放入 macrotask queue 也可以放入 microtask queue中</li><li>每一次event loop，会首先执行 microtask queue， 执行完成后，会提取 macrotask queue 的一个任务加入 microtask queue， 接着继续执行microtask queue，依次执行下去直至所有任务执行结束。</li></ol><h3 id="三、异步运行机制"><a href="#三、异步运行机制" class="headerlink" title="三、异步运行机制"></a>三、异步运行机制</h3><p>我们已知， JS 是单线程的，至于为什么，详见 <a href="https://github.com/LuNaHaiJiao/blog/issues/11" target="_blank" rel="noopener">JS 基础之异步（一）</a>。</p><p>下面看一个例子：</p><pre><code class="js">// 1. 开始执行console.log(1)    //     2. 打印 1setTimeout(function () {    // 6. 浏览器在 0ms 后，将该函数推入任务队列    console.log(2)    // 7. 打印 2    Promise.resolve(1).then(function () {    // 8. 将 resolve(1) 推入任务队列  9. 将 function函数推入任务队列        console.log(&#39;ok&#39;)    // 10. 打印 ok    })})    // 3.调用 setTimeout 函数，并定义其完成后执行的回调函数setTimeout(function (){        // 11. 浏览器 0ms 后，将该函数推入任务队列    console.log(3)    // 12. 打印 3})  // 4. 调用 setTimeout 函数，并定义其完成后执行的回调函数// 5. 主线程执行栈清空，开始读取 任务队列 中的任务// output： 1  2 ok 3</code></pre><p>JS 主线程拥有一个 <strong>执行栈（同步任务）</strong> 和 一个 <strong>任务队列（microtasks queue）</strong>，主线程会依次执行代码，</p><ul><li>当遇到函数（同步）时，会先将函数入栈，函数运行结束后再将该函数出栈；</li><li>当遇到 task 任务（异步）时，这些 task 会返回一个值，让主线程不在此阻塞，使主线程继续执行下去，而真正的 task 任务将交给 <strong>浏览器内核</strong> 执行，浏览器内核执行结束后，会将该任务事先定义好的<strong>回调函数</strong>加入相应的<strong>任务队列（microtasks queue/ macrotasks queue）</strong>中。</li><li>当JS主线程<strong>清空执行栈</strong>之后，会按先入先出的顺序读取microtasks queue中的<strong>回调函数</strong>，并将该函数入栈，继续运行执行栈，直到清空执行栈，再去读取<strong>任务队列</strong>。</li><li>当microtasks queue中的任务执行完成后，会提取 macrotask queue 的一个任务加入 microtask queue， 接着继续执行microtask queue，依次执行下去直至所有任务执行结束。</li></ul><p>这就是 <strong>JS的异步执行机制</strong></p><h3 id="四、async-await、Promise、setTimeout"><a href="#四、async-await、Promise、setTimeout" class="headerlink" title="四、async await、Promise、setTimeout"></a>四、async await、Promise、setTimeout</h3><ol><li><p><strong>setTimeout</strong></p><pre><code class="js">console.log(&#39;script start&#39;)    //1. 打印 script startsetTimeout(function(){    console.log(&#39;settimeout&#39;)    // 4. 打印 settimeout})    // 2. 调用 setTimeout 函数，并定义其完成后执行的回调函数console.log(&#39;script end&#39;)    //3. 打印 script start// 输出顺序：script start-&gt;script end-&gt;settimeout</code></pre></li><li><p><strong>Promise</strong></p><p>Promise本身是<strong>同步的立即执行函数</strong>， 当在 executor 中执行 resolve 或者 reject 的时候, 此时是异步操作， 会先执行 then/catch 等，当主栈完成后，才会去调用 resolve/reject 中存放的方法执行，打印 p 的时候，是打印的返回结果，一个 Promise 实例。</p><pre><code class="js">console.log(&#39;script start&#39;)let promise1 = new Promise(function (resolve) {    console.log(&#39;promise1&#39;)    resolve()    console.log(&#39;promise1 end&#39;)}).then(function () {    console.log(&#39;promise2&#39;)})setTimeout(function(){    console.log(&#39;settimeout&#39;)})console.log(&#39;script end&#39;)// 输出顺序: script start-&gt;promise1-&gt;promise1 end-&gt;script end-&gt;promise2-&gt;settimeout</code></pre><p>当JS主线程执行到Promise对象时，</p><ul><li>promise1.then() 的回调就是一个 task<ul><li>promise1 是 <strong>resolved 或 rejected</strong> ：那这个 task 就会放入<strong>当前事件循环</strong>回合的 microtask queue</li><li>promise1 是 <strong>pending</strong>：这个 task 就会放入 事件循环的<strong>未来的某个</strong>(可能下一个)回合的 microtask queue 中</li></ul></li><li>setTimeout 的回调也是个 task ，它会被放入 macrotask queue 即使是 0ms 的情况</li></ul><p><strong>回到文章开头经典的例子：</strong></p><pre><code class="js">const p = Promise.resolve(); // 1. p 的状态为 resolve；(async () =&gt; {      await p; // 2. 返回，并将 函数体后面的语句 console.log(&#39;await end&#39;) 放入下一个事件循环的 microtask queue 中    console.log(&#39;await end&#39;); // 6. 执行，打印 await end})();p.then(() =&gt; { // 3. p 的状态为 resolve,会把 p.then() 放入当前事件循环的 microtask queue中。    console.log(&#39;then 1&#39;); // 4. 执行，打印 then 1}).then(() =&gt; {    console.log(&#39;then 2&#39;); // 5. 执行，打印 then 2，当前 microtask queue 结束，运行下一个 microtask queue});// 输出结果：then 1-&gt;then 1-&gt;await end</code></pre><p>例如：</p><pre><code class="js">console.log(&#39;script start&#39;);setTimeout(function() {  console.log(&#39;setTimeout&#39;);}, 0);Promise.resolve().then(function() {  console.log(&#39;promise1&#39;);}).then(function() {  console.log(&#39;promise2&#39;);});console.log(&#39;script end&#39;);// 输出结果：script start-&gt;script end-&gt;promise1-&gt;promise2-&gt;setTimeout</code></pre></li><li><p><strong>async await</strong></p><pre><code class="js">async function async1(){   console.log(&#39;async1 start&#39;);    await async2();    console.log(&#39;async1 end&#39;)}async function async2(){    console.log(&#39;async2&#39;)}console.log(&#39;script start&#39;);async1();console.log(&#39;script end&#39;)// 输出顺序：script start-&gt;async1 start-&gt;async2-&gt;script end-&gt;async1 end</code></pre><p>async 函数返回一个 Promise 对象，当函数执行的时候，一旦遇到 await 就会先返回，等到触发的异步操作完成，再执行函数体内后面的语句。可以理解为，是让出了线程，跳出了 async 函数体。</p><p>举个例子：</p><pre><code class="js">async function func1() {    return 1}console.log(func1())</code></pre><p><a href="https://camo.githubusercontent.com/127fb6994c3e219bae33573cc46aab7f97b7367b/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303139303133313137343431333536322e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/127fb6994c3e219bae33573cc46aab7f97b7367b/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303139303133313137343431333536322e706e67" alt="在这里插入图片描述"></a><br>很显然，func1的运行结果其实就是一个 Promise 对象。因此我们也可以使用 then 来处理后续逻辑。</p><pre><code class="js">func1().then(res =&gt; {    console.log(res);  // 1})</code></pre><p>await 的含义为等待，也就是 async 函数需要等待 await 后的函数执行完成并且有了返回结果（ Promise 对象）之后，才能继续执行下面的代码。await通过返回一个Promise对象来实现同步的效果。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非常优秀的前端博文集合</title>
      <link href="/2019/09/12/article/"/>
      <url>/2019/09/12/article/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><ul><li><a href="https://juejin.im/post/59e85eebf265da430d571f89" target="_blank" rel="noopener">这一次，彻底弄懂 JavaScript 执行机制</a></li><li><a href="https://juejin.im/post/5cef46226fb9a07eaf2b7516" target="_blank" rel="noopener">一个合格的中级前端工程师必须要掌握的 28 个 JavaScript 技巧</a></li><li><a href="https://juejin.im/post/59eff1fb6fb9a044ff30a942" target="_blank" rel="noopener">JavaScript 专题系列 20 篇正式完结！</a></li><li><a href="https://juejin.im/post/5bdfef86e51d453bf8051bf8" target="_blank" rel="noopener">JavaScript 复杂判断的更优雅写法</a></li><li><a href="https://juejin.im/post/5a2a7a5051882535cd4abfce" target="_blank" rel="noopener">编写自己的代码库（javascript 常用实例的实现与封装）</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F33298555" target="_blank" rel="noopener">从 2.4 万篇文章中挑出的最棒的 JavaScript 学习指南（2018 版）</a></li><li><a href="https://juejin.im/post/5a091afe6fb9a044ff30f402" target="_blank" rel="noopener">打造自己的 JavaScript 武器库</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fstephentian%2F33-js-concepts" target="_blank" rel="noopener">JavaScript 开发者应懂的 33 个概念</a></li><li><a href="https://juejin.im/post/5a6e881af265da3e2f0134e3" target="_blank" rel="noopener">JavaScript 八张思维导图</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fcodebay.cn%2Fpost%2F7452.html" target="_blank" rel="noopener">[译]非常有用的 48 个 JavaScript 代码片段，值得收藏！</a></li><li><a href="https://juejin.im/post/5bfaa2e26fb9a04a0440b0e4" target="_blank" rel="noopener">全方位彻底读懂&lt;你不知道的 JavaScript(上)&gt;–一篇六万多字的读书笔记</a></li><li><a href="https://juejin.im/post/5c24b7a851882509a76875e8" target="_blank" rel="noopener">JavaScript 代码简洁之道</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000016101940" target="_blank" rel="noopener">急速 JavaScript 全栈教程</a></li><li><a href="https://juejin.im/post/5cf468a9f265da1bb77652aa" target="_blank" rel="noopener">我从来不理解 JavaScript 闭包，直到有人这样向我解释它</a></li><li><a href="https://juejin.im/post/5cc7afdde51d456e671c7e48" target="_blank" rel="noopener">灵活运用 JavaScript 开发技巧</a></li><li><a href="https://juejin.im/post/5b8d0a74f265da431d0e7ec0" target="_blank" rel="noopener">[译文] 如何在 JavaScript 中更好地使用数组</a></li><li><a href="https://juejin.im/post/5b7e1f81f265da436a075db4" target="_blank" rel="noopener">精读《高效 javascript》</a></li><li><a href="https://juejin.im/post/5b6adc7ee51d4534b8587560" target="_blank" rel="noopener">一篇文章搞定 javascript 正则表达式</a></li><li><a href="https://juejin.im/post/5a0c199851882531926e4297" target="_blank" rel="noopener">JavaScript 实用技巧和写法建议</a></li><li><a href="https://juejin.im/post/5b1f899fe51d4506c60e46ee" target="_blank" rel="noopener">44 道 JavaScript 难题（JavaScript Puzzlers!）</a></li><li><a href="https://juejin.im/post/59f697f8f265da431c6f945b" target="_blank" rel="noopener">JavaScript 开发人员需要知道的简写技巧</a></li><li><a href="https://juejin.im/post/5b0284ac51882542ad774c45" target="_blank" rel="noopener">解锁多种 JavaScript 数组去重姿势</a></li><li><a href="https://juejin.im/post/5a8d85506fb9a0634417f120" target="_blank" rel="noopener">javascript 高仿热血传奇游戏</a></li><li><a href="https://juejin.im/post/5b10ba336fb9a01e66164346" target="_blank" rel="noopener">JavaScript 内存机制（前端同学进阶必备）</a></li><li><a href="https://juejin.im/post/5a5d64fbf265da3e243b831f" target="_blank" rel="noopener">JavaScript 运行原理解析</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2F36kr.com%2Fp%2F5110763.html" target="_blank" rel="noopener">2018 年最值得关注的 JavaScript 趋势</a></li><li><a href="https://juejin.im/post/5bbafd78f265da0ad947e6ba" target="_blank" rel="noopener">8102 年如何写一个现代的 JavaScript 库</a></li><li><a href="https://juejin.im/post/5bcdb6c6f265da0afd4b75c0" target="_blank" rel="noopener">JavaScript 原型精髓 #一篇就够系列</a></li><li><a href="https://juejin.im/post/5b90e00e6fb9a05cf9080dff" target="_blank" rel="noopener">0.1 + 0.2 不等于 0.3？为什么 JavaScript 有这种“骚”操作？</a></li><li><a href="https://juejin.im/post/5bda4e6fe51d45681f245274" target="_blank" rel="noopener">一次性搞懂 JavaScript 正则表达式之语法</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.zcfy.cc%2Farticle%2F10-javascript-animation-libraries-to-follow-in-2018" target="_blank" rel="noopener">2018 年值得关注的 10 大 JavaScript 动画库</a></li><li><a href="https://juejin.im/post/5d0e11196fb9a07eee5ed6d2" target="_blank" rel="noopener">[译] 如何写出漂亮的 JavaScript 代码</a></li><li><a href="https://juejin.im/post/5af55e6751882542682e43e7" target="_blank" rel="noopener">网上看到的“12 个非常有用的 JavaScript 技巧”</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.zcfy.cc%2Farticle%2F11-javascript-animation-libraries-for-2018" target="_blank" rel="noopener">2018 年值得期待 11 个 Javascript 动画库</a></li><li><a href="https://juejin.im/post/5c49b822f265da6142743a87" target="_blank" rel="noopener">【译】用 JavaScript 和 Emoji 做地址栏动画</a></li><li><a href="https://juejin.im/post/5a6ad46ef265da3e513352c8" target="_blank" rel="noopener">JavaScript 异步机制详解</a></li><li><a href="https://juejin.im/post/5a6547d0f265da3e283a1df7" target="_blank" rel="noopener">从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理</a></li><li><a href="https://juejin.im/post/5b51e5d3f265da0f4861143c" target="_blank" rel="noopener">JS 中可以提升幸福度的小技巧</a></li><li><a href="https://juejin.im/post/5ae97bd05188256719521ae0" target="_blank" rel="noopener">如何在疲劳的 JS 世界中持续学习</a></li><li><a href="https://juejin.im/post/5b8de829f265da43623c4261" target="_blank" rel="noopener">7 分钟理解 JS 的节流、防抖及使用场景</a></li><li><a href="https://juejin.im/post/5cc55eb5e51d456e577f93f0" target="_blank" rel="noopener">JS 无形装逼，最为致命</a></li><li><a href="https://juejin.im/post/5a633babf265da3e2a0dadcc" target="_blank" rel="noopener">2017 年崛起的 JS 项目</a></li><li><a href="https://juejin.im/post/5b0903b26fb9a07a9d70c7e0" target="_blank" rel="noopener">【干货】js 数组详细操作方法及解析合集</a></li><li><a href="https://juejin.im/post/5aa7d82c6fb9a028c522de43" target="_blank" rel="noopener">几道 JS 代码手写题以及一些代码实现</a></li><li><a href="https://juejin.im/post/5becf928f265da61380ec986" target="_blank" rel="noopener">看看这些被同事喷的 JS 代码风格你写过多少</a></li><li><a href="https://juejin.im/post/5b3715def265da59af40a630" target="_blank" rel="noopener">你不知道的 js 中关于 this 绑定机制的解析[看完还不懂算我输]</a></li><li><a href="https://juejin.im/post/5d245d4151882555300feb77" target="_blank" rel="noopener">2019 年 JS 正则大全(常用)</a></li><li><a href="https://juejin.im/post/5cec1bcff265da1b8f1aa08f" target="_blank" rel="noopener">【JS 进阶】你真的掌握变量和类型了吗</a></li><li><a href="https://juejin.im/post/5b8a8724f265da435450c591" target="_blank" rel="noopener">小邵教你玩转 JS 面向对象</a></li><li><a href="https://juejin.im/post/59f54321f265da43085d4a7f" target="_blank" rel="noopener">带你理解 JS 容易出错的坑和细节</a></li><li><a href="https://juejin.im/post/5cfd2ec7e51d45554877a59f" target="_blank" rel="noopener">用 JS 开发跨平台桌面应用，从原理到实践</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FVkshf-nEDwo2ODUJhxgzVA" target="_blank" rel="noopener">JS 的防抖与节流</a></li><li><a href="https://juejin.im/post/5b42bb9ce51d45199060e199" target="_blank" rel="noopener">【译】5 分钟学习 JS 一些小技巧</a></li><li><a href="https://juejin.im/post/5b62d02ee51d453467552dc9" target="_blank" rel="noopener">常用 JS 方法整理</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.jianshu.com%2Fp%2Fe65c246beac1" target="_blank" rel="noopener">如何定义一个高逼格的原生 JS 插件</a></li><li><a href="https://juejin.im/post/5d0706a6f265da1bc23f77a9" target="_blank" rel="noopener">「前端进阶」JS 中的内存管理</a></li><li><a href="https://juejin.im/post/5ac472016fb9a028c22afa9d" target="_blank" rel="noopener">想偷懒的话，toLocaleString 了解一下？</a></li><li><a href="https://juejin.im/post/5c96d0c751882511c832ff7b" target="_blank" rel="noopener">嗨，你真的懂 this 吗？</a></li><li><a href="https://juejin.im/post/5a6155126fb9a01cb64edb45" target="_blank" rel="noopener">Event Loop 的规范和实现</a></li><li><a href="https://juejin.im/post/5a30193051882503dc53af3c" target="_blank" rel="noopener">解读 Promise 内部实现原理</a></li><li><a href="https://juejin.im/post/5b1ffff96fb9a01e345ba704" target="_blank" rel="noopener">一次性让你懂 async/await，解决回调地狱</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fiammapping.com%2Fthe-other-ways-to-use-localstorage%2F" target="_blank" rel="noopener">localStorage 还能这么用</a></li><li><a href="https://juejin.im/post/5cbc0a9cf265da03b11f3505" target="_blank" rel="noopener">最后一次搞懂 Event Loop</a></li><li><a href="https://juejin.im/post/5b7b88d46fb9a019e9767405" target="_blank" rel="noopener">防抖和节流原理分析</a></li><li><a href="https://juejin.im/post/5aa7868b6fb9a028dd4de672" target="_blank" rel="noopener">Promise 原理讲解 &amp;&amp; 实现一个 Promise 对象 (遵循 Promise/A+规范)</a></li><li><a href="https://juejin.im/post/59dc66256fb9a0452a3b4832" target="_blank" rel="noopener">如何无痛降低 if else 面条代码复杂度</a></li><li><a href="https://juejin.im/post/5d25b39bf265da1bb67a4176" target="_blank" rel="noopener">嘿，不要给 async 函数写那么多 try/catch 了</a></li><li><a href="https://juejin.im/post/5d2d146bf265da1b9163c5c9" target="_blank" rel="noopener">8 个问题看你是否真的懂 JS</a></li><li><a href="https://juejin.im/post/5afafb0c6fb9a07ac65331fe" target="_blank" rel="noopener">console 觉醒之路，打印个动画如何？</a></li><li><a href="https://juejin.im/post/5ad6b34a6fb9a028cc61bfb3" target="_blank" rel="noopener">高阶函数，你怎么那么漂亮呢！</a></li><li><a href="https://juejin.im/post/5a04066351882517c416715d" target="_blank" rel="noopener">Promise 必知必会（十道题）</a></li><li><a href="https://juejin.im/post/5afe6d3bf265da0b9e654c4b" target="_blank" rel="noopener">Promise 不会？？看这里！！！史上最通俗易懂的 Promise！！！</a></li><li><a href="https://juejin.im/post/5b83cb5ae51d4538cc3ec354" target="_blank" rel="noopener">Promise 实现原理（附源码）</a></li><li><a href="https://juejin.im/post/5b7ccc65f265da436631a3d9" target="_blank" rel="noopener">小哥哥小姐姐，来尝尝 Async 函数这块语法糖</a></li><li><a href="https://juejin.im/post/59bfe84351882531b730bac2" target="_blank" rel="noopener">this、apply、call、bind</a></li><li><a href="https://juejin.im/post/5a2e5f0851882575d42f5609" target="_blank" rel="noopener">import、require、export、module.exports 混合使用详解</a></li><li><a href="https://juejin.im/post/5bc1ae9be51d450e8b140b0c" target="_blank" rel="noopener">深拷贝的终极探索（90%的人都不知道）</a></li><li><a href="https://juejin.im/post/5aed6110518825671b026bed" target="_blank" rel="noopener">7 种方法实现数组去重</a></li><li><a href="https://juejin.im/post/5b5dcf8351882519790c9a2e" target="_blank" rel="noopener">浅拷贝与深拷贝</a></li></ul><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><ul><li><a href="https://juejin.im/post/5c35953ce51d45523f04b6d2" target="_blank" rel="noopener">不可思议的纯 CSS 滚动进度条效果</a></li><li><a href="https://juejin.im/post/5cb45a06f265da03474df54e" target="_blank" rel="noopener">【前端词典】提高幸福感的 9 个 CSS 技巧</a></li><li><a href="https://juejin.im/post/5b9a4477f265da0ad82bf921" target="_blank" rel="noopener">CSS 实现水平垂直居中的 1010 种方式（史上最全）</a></li><li><a href="https://juejin.im/post/5d3eca78e51d4561cb5dde12" target="_blank" rel="noopener">你未必知道的 49 个 CSS 知识点</a></li><li><a href="https://juejin.im/post/5a0c184c51882531926e4294" target="_blank" rel="noopener">个人总结（css3 新特性）</a></li><li><a href="https://juejin.im/post/5b1e2b50f265da6e5546c15d" target="_blank" rel="noopener">用最短的 CSS 样式，勾勒大数据演示屏</a></li><li><a href="https://juejin.im/post/5b6133a351882519d346853f" target="_blank" rel="noopener">CSS 性能优化的 8 个技巧</a></li><li><a href="https://juejin.im/post/5aab4f985188255582521c57" target="_blank" rel="noopener">🚨Web 开发者需要知道的 CSS Tricks</a></li><li><a href="https://juejin.im/post/5ab9e9056fb9a028be360292" target="_blank" rel="noopener">不可思议的纯 CSS 导航栏下划线跟随效果</a></li><li><a href="https://juejin.im/post/5d2716ab5188257b775d35ba" target="_blank" rel="noopener">单标签！纯 CSS 实现动态晴阴雨雪</a></li><li><a href="https://juejin.im/post/5ce607a7e51d454f6f16eb3d" target="_blank" rel="noopener">前端基础篇之 CSS 世界</a></li><li><a href="https://juejin.im/post/5b6d0756e51d4562b31ad23c" target="_blank" rel="noopener">滚动视差？CSS 不在话下</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fjawil%2Fblog%2Fissues%2F29" target="_blank" rel="noopener">CSS 黑魔法小技巧，让你少写不必要的 JS，代码更优雅</a></li><li><a href="https://juejin.im/post/5a954add6fb9a06348538c0d" target="_blank" rel="noopener">CSS 知识点及技巧整理</a></li><li><a href="https://juejin.im/post/5a446d19f265da43052eebcc" target="_blank" rel="noopener">你以为 CSS 只是个简单的布局？</a></li><li><a href="https://juejin.im/post/5a0c18196fb9a045023b2ddf" target="_blank" rel="noopener">编写自己的代码库(css3 常用动画的实现)</a></li><li><a href="https://juejin.im/post/5b12ae3de51d4506d73f0bb4" target="_blank" rel="noopener">不定期更新的 CSS 奇淫技巧（一）</a></li><li><a href="https://juejin.im/post/5b6d0c5cf265da0f504a837f" target="_blank" rel="noopener">从青铜到王者 10 个 css3 伪类使用技巧和运用，了解一哈</a></li><li><a href="https://juejin.im/post/5d0ad9a4f265da1bae38ffe6" target="_blank" rel="noopener">【译】一行 css 代码搞定响应式布局</a></li><li><a href="https://juejin.im/post/5b0a9f266fb9a07aa114a908" target="_blank" rel="noopener">愈发熟练的 CSS 技巧</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.zcfy.cc%2Farticle%2Fstunning-hover-effects-with-css-variables" target="_blank" rel="noopener">利用 CSS 变量实现令人震惊的悬浮效果</a></li><li><a href="https://juejin.im/post/5b607a0b6fb9a04fd260aa70" target="_blank" rel="noopener">不定期更新的 CSS 奇淫技巧（二）</a></li><li><a href="https://juejin.im/post/59c60691518825396f4f71a1" target="_blank" rel="noopener">原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的</a></li><li><a href="https://juejin.im/post/5b88ddca6fb9a019c7717096" target="_blank" rel="noopener">css 加载会造成阻塞吗？</a></li><li><a href="https://juejin.im/post/5c7f333ce51d4541e510cd6f" target="_blank" rel="noopener">不可思议的纯 CSS 实现鼠标跟随效果</a></li><li><a href="https://juejin.im/post/5b406f40e51d45194832b759" target="_blank" rel="noopener">CSS 世界中那些说起来很冷的知识</a></li><li><a href="https://juejin.im/post/5b876f86518825431079ddd6" target="_blank" rel="noopener">彻底搞懂 CSS 层叠上下文、层叠等级、层叠顺序、z-index</a></li><li><a href="https://juejin.im/post/5a7a9a545188257a892998ef" target="_blank" rel="noopener">CSS 设置居中的方案总结-超全</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F26317328" target="_blank" rel="noopener">15 个有趣的 JS 和 CSS 库</a></li><li><a href="https://juejin.im/post/5b1f41246fb9a01e725131fb" target="_blank" rel="noopener">CSS 常用技巧</a></li><li><a href="https://juejin.im/post/5c1101875188257afc713809" target="_blank" rel="noopener">【译】22 个必备的 CSS 小技巧</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fsvgtrick.com%2Ftricks%2Fdc4f73cd7193fff5f61dfdb1d36a4b6c" target="_blank" rel="noopener">10 个独特的 CSS 背景视觉效果</a></li><li><a href="https://juejin.im/post/5cc089eae51d456e7d189f9d" target="_blank" rel="noopener">可能是最全的前端动效库汇总</a></li><li><a href="https://juejin.im/post/5ace1b306fb9a028c71ed009" target="_blank" rel="noopener">腾讯一面总结-web 前端-2018.4.11</a></li><li><a href="https://juejin.im/post/5b8905456fb9a01a105966b4" target="_blank" rel="noopener">彻底搞懂 word-break、word-wrap、white-space</a></li><li><a href="https://juejin.im/post/5a1e7e7e51882503eb4b0a80" target="_blank" rel="noopener">一起炫起来 – 3D 粒子动画篇</a></li><li><a href="https://juejin.im/post/5ac2329b6fb9a028bf057caf" target="_blank" rel="noopener">【基础知识】Flex-弹性布局原来如此简单！！</a></li><li><a href="https://juejin.im/post/5bdfe1dbe51d45054771f9d4" target="_blank" rel="noopener">炫酷粒子表白，双十一脱单靠它了！</a></li><li><a href="https://juejin.im/post/5bc8184ee51d450e81090d94" target="_blank" rel="noopener">幻术，一行代码实现镂空效果</a></li><li><a href="https://juejin.im/post/5b82ac63e51d4538c362233f" target="_blank" rel="noopener">怎么实现一个 3d 翻书效果</a></li><li><a href="https://juejin.im/post/5a22d0086fb9a0451a7631ee" target="_blank" rel="noopener">Web 自适应布局你需要知道的所有事儿</a></li></ul><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><ul><li><a href="https://juejin.im/post/5b174de8f265da6e410e0b4e" target="_blank" rel="noopener">Vue 项目里戳中你痛点的问题及解决办法（更新）</a></li><li><a href="https://juejin.im/post/5b55c118f265da0f6f1aa354" target="_blank" rel="noopener">vue 中 Axios 的封装和 API 接口的管理</a></li><li><a href="https://juejin.im/post/59fa9257f265da43062a1b0e" target="_blank" rel="noopener">Vue 2.x 脱坑记 - 查漏补缺(汇总下群里高频询问的 xxx 及给出不靠谱的解决方案)</a></li><li><a href="https://juejin.im/post/5b29c3bde51d45588d4d7110" target="_blank" rel="noopener">浅谈使用 Vue 构建前端 10w+ 代码量的单页面应用开发底层</a></li><li><a href="https://juejin.im/post/5b1230c1f265da6e603933ad" target="_blank" rel="noopener">你或许不知道 Vue 的这些小技巧</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000012692321" target="_blank" rel="noopener">Vue 学习看这篇就够</a></li><li><a href="https://juejin.im/post/5b960fcae51d450e9d645c5f" target="_blank" rel="noopener">Vue 应用性能优化指南</a></li><li><a href="https://juejin.im/post/5c92ff94f265da6128275a85" target="_blank" rel="noopener">手摸手，带你用 vue 撸后台 系列五(v4.0 新版本)</a></li><li><a href="https://juejin.im/post/5af16a2cf265da0b8636353b" target="_blank" rel="noopener">VUE 组件汇总</a></li><li><a href="https://juejin.im/post/5b4ad441f265da0f7d4eeb7a" target="_blank" rel="noopener">Vue 源码阅读前必须知道 javascript 的基础内容</a></li><li><a href="https://juejin.im/post/5ada9b586fb9a07aaf34c746" target="_blank" rel="noopener">Vue 前端开发规范</a></li><li><a href="https://juejin.im/post/5afb6ecef265da0b8070e726" target="_blank" rel="noopener">Vue 全家桶实现网易云音乐 WebApp</a></li><li><a href="https://juejin.im/post/5b834971f265da436d7e4a9d" target="_blank" rel="noopener">Vue 学习路径-轻松从基础到实战</a></li><li><a href="https://juejin.im/post/5b850a3e51882542e4420779" target="_blank" rel="noopener">前后端分离 Vue + NodeJS(Koa) + MongoDB，从产品到开发，全栈实践</a></li><li><a href="https://juejin.im/post/5a8e3f00f265da4e747fc700" target="_blank" rel="noopener">vue 多页面开发和打包的正确姿势</a></li><li><a href="https://juejin.im/post/5b41bdef6fb9a04fe63765f1" target="_blank" rel="noopener">Vue 的钩子函数[路由导航守卫、keep-alive、生命周期钩子]</a></li><li><a href="https://juejin.im/post/5b5bfd5b6fb9a04fdd7d687a" target="_blank" rel="noopener">vue 权限路由实现方式总结</a></li><li><a href="https://juejin.im/post/5adff30f518825672d33d596" target="_blank" rel="noopener">【大型干货】手拉手带你过一遍 vue 部分源码</a></li><li><a href="https://juejin.im/post/5a4b78226fb9a0451a76c1a1" target="_blank" rel="noopener">2018 我所了解的 Vue 知识大全（一）</a></li><li><a href="https://juejin.im/post/5ce3b519f265da1bb31c0d5f" target="_blank" rel="noopener">7 个有用的 Vue 开发技巧</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fblog.fundebug.com%2F2018%2F05%2F29%2F30-amazing-vuejs-open-source%2F" target="_blank" rel="noopener">2018 年最值得关注的 30 个 Vue 开源项目</a></li><li><a href="https://juejin.im/post/59c0aedf6fb9a00a59595105" target="_blank" rel="noopener">一步步带你做 vue 后台管理框架 - 登录功能</a></li><li><a href="https://juejin.im/post/5d0259f2518825405d15ae62" target="_blank" rel="noopener">Vue3.0 前的 TypeScript 最佳入门实践</a></li><li><a href="https://juejin.im/post/5d267dcdf265da1b957081a3" target="_blank" rel="noopener">vue 中 8 种组件通信方式, 值得收藏!</a></li><li><a href="https://juejin.im/post/5c488a3cf265da615705cc2a" target="_blank" rel="noopener">离职后才搞懂 vue 项目开发流程中的疑惑点</a></li><li><a href="https://juejin.im/post/5b45df255188251b1d474860" target="_blank" rel="noopener">手把手教你封装 Vue 组件，并使用 npm 发布</a></li><li><a href="https://juejin.im/post/5bd97e7c6fb9a022852a71cf" target="_blank" rel="noopener">vue 组件通信全揭秘(共 7 章)</a></li><li><a href="https://juejin.im/post/5b592635e51d4533d2043e15" target="_blank" rel="noopener">手把手教你用原生 JavaScript 造轮子（1）——分页器（最后更新：Vue 插件版本，本篇 Over！）</a></li><li><a href="https://juejin.im/post/5cab64ce5188251b19486041" target="_blank" rel="noopener">「Vue 实践」武装你的前端项目</a></li><li><a href="https://juejin.im/post/5c3c544c6fb9a049d37f5903" target="_blank" rel="noopener">vue-cli3 从搭建到优化</a></li><li><a href="https://juejin.im/post/5a7914386fb9a063543c0f44" target="_blank" rel="noopener">Vue 实战篇（Vue 仿今日头条）</a></li><li><a href="https://juejin.im/post/5cde0b43f265da03867e78d3" target="_blank" rel="noopener">Vue 组件间通信六种方式（完整版）</a></li><li><a href="https://juejin.im/post/5a0d5df1f265da43062a542f" target="_blank" rel="noopener">[译] 2017 年比较 Angular、React、Vue 三剑客 </a></li><li><a href="https://juejin.im/post/5aca46e2f265da238c3af4ca" target="_blank" rel="noopener">仿美团外卖的全栈项目(vue+node+mongodb)带支付-&gt;大三求实习</a></li><li><a href="https://juejin.im/post/5ae02f39518825672f198ac2" target="_blank" rel="noopener">Vue 使用中的小技巧</a></li><li><a href="https://juejin.im/post/5ba358a56fb9a05d2068401d" target="_blank" rel="noopener">Vue 页面跳转动画效果实现</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000014963269%3Futm_source%3Dchannel-hottest" target="_blank" rel="noopener">Vue 页面骨架屏 </a></li><li><a href="https://juejin.im/post/5b80f4e36fb9a019ce148fe9" target="_blank" rel="noopener">干货分享：vue2.0 做移动端开发用到的相关插件和经验总结(更新)</a></li><li><a href="https://juejin.im/post/5b6f8eeb6fb9a0098729aa68" target="_blank" rel="noopener">当大多数人对 Vue 理解到炉火纯青的时候，是不是该思考一下怎么让 vue 页面骚气起来</a></li><li><a href="https://juejin.im/post/5cdcbae9e51d454759351d84" target="_blank" rel="noopener">vue 路由 按需 keep-alive</a></li><li><a href="https://juejin.im/post/5ad56d86518825556534ff4b" target="_blank" rel="noopener">vue 中需要注意的问题总结(上)</a></li><li><a href="https://juejin.im/post/5a3c73c2f265da4310488f20" target="_blank" rel="noopener">关于 vue 全家桶的四个 “最佳实践”</a></li><li><a href="https://juejin.im/post/5a291092518825293b50366d" target="_blank" rel="noopener">Vue SPA 首屏加载优化实践</a></li><li><a href="https://juejin.im/post/5ab2ff496fb9a028c06ab78f" target="_blank" rel="noopener">你应该要知道的 Vue.js</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Felemefe%2Fv-charts" target="_blank" rel="noopener">v-charts | 饿了么团队开源的基于 Vue 和 ECharts 的图表工具</a></li><li><a href="https://juejin.im/post/5a711724518825733201ebb1" target="_blank" rel="noopener">使用 vue 构建一个自动建站项目</a></li><li><a href="https://juejin.im/post/5a121e4b6fb9a045076f41a3" target="_blank" rel="noopener">也许 Vue+CSS3 做交互特效更简单</a></li><li><a href="https://juejin.im/post/5ae91fa76fb9a07aa7677543" target="_blank" rel="noopener">Vue.js 中 watch 的高级用法</a></li><li><a href="https://juejin.im/post/5a0c191f6fb9a04514639419" target="_blank" rel="noopener">vue 快速入门的三个小实例</a></li><li><a href="https://juejin.im/post/5b8e526051882542a82baba6" target="_blank" rel="noopener">VuePress 手摸手教你搭建一个类 Vue 文档风格的技术文档/博客</a></li><li><a href="https://juejin.im/post/5cb3eed65188251b0351f2c4" target="_blank" rel="noopener">封装 Vue 组件的一些技巧</a></li><li><a href="https://juejin.im/post/5b3027cce51d4558c65216a9" target="_blank" rel="noopener">没朋友(mpvue)，点个外卖，一个人也要好好吃饭</a></li><li><a href="https://juejin.im/post/5b2fd09ee51d45588576f429" target="_blank" rel="noopener">一个 Vue 页面的内存泄露分析</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.zcfy.cc%2Farticle%2Fthe-best-explanation-of-javascript-reactivity" target="_blank" rel="noopener">Vue.js 是如何做到数据响应的？</a></li><li><a href="https://juejin.im/post/5a716c4c6fb9a01cb42cac4b" target="_blank" rel="noopener">Vue 项目自动转换 px 为 rem，高保真还原设计图</a></li><li><a href="https://juejin.im/post/5cd8b450e51d453a580fa8e1" target="_blank" rel="noopener">少女风 vue 组件库制作全攻略~~</a></li><li><a href="https://juejin.im/post/59cb19d95188257e84671938" target="_blank" rel="noopener">Vant - 高效的 Vue 组件库，再造一个有赞移动商城也不在话下</a></li><li><a href="https://juejin.im/post/5c106485e51d450e657571a6" target="_blank" rel="noopener">加快 Vue 项目的开发速度</a></li><li><a href="https://juejin.im/post/5ad56aad51882532ce65affa" target="_blank" rel="noopener">基于 react/vue 的移动端终极适配方案（更新 css-modules 配置）</a></li><li><a href="https://juejin.im/post/5c73554cf265da2de33f2a32" target="_blank" rel="noopener">「从源码中学习」Vue 源码中的 JS 骚操作</a></li><li><a href="https://juejin.im/post/5adc99f56fb9a07abd0d3ee7" target="_blank" rel="noopener">Vue 还有这种骚操作？浅析几个新手常常忽略的 API</a></li><li><a href="https://juejin.im/post/5ab07a63f265da2389258b12" target="_blank" rel="noopener">Vue 源码简析(版本 vue-2.4.4)</a></li><li><a href="https://juejin.im/post/5b5697675188251b11097464" target="_blank" rel="noopener">VueRouter 源码深度解析</a></li><li><a href="https://juejin.im/post/5b97e60a5188255c5d567aea" target="_blank" rel="noopener">干货分享：vue2.0 做移动端开发用到的相关插件和经验总结(2)</a></li><li><a href="https://juejin.im/post/5bdec6e8e51d4505327a8952" target="_blank" rel="noopener">一份超级详细的 Vue-cli3.0 使用教程[赶紧来试试！]</a></li><li><a href="https://juejin.im/post/5ae986636fb9a07ac3634826" target="_blank" rel="noopener">入职第一天：前端 leader 手把手教我入门 Vue 服务器端渲染（SSR）</a></li><li><a href="https://juejin.im/post/5b98e5875188255c8320f88a" target="_blank" rel="noopener">通过 vue-cli3 构建一个 SSR 应用程序</a></li><li><a href="https://juejin.im/post/5b86f6cc5188256fd44c0ce9" target="_blank" rel="noopener">Vue.js 从 Virtual DOM 映射到真实 DOM 的过程</a></li><li><a href="https://juejin.im/post/5a31ddb251882527541053ee" target="_blank" rel="noopener">使用 VUE 分分钟写一个验证码输入组件</a></li><li><a href="https://juejin.im/post/5b18c50d5188251377116fe9" target="_blank" rel="noopener">vue 实践中的常见知识漏洞 001</a></li><li><a href="https://juejin.im/post/5ce5565d6fb9a07ed2244513" target="_blank" rel="noopener">【前端词典】学习 Vue 源码的必要知识储备</a></li><li><a href="https://juejin.im/post/59f2845e6fb9a0451a759e85" target="_blank" rel="noopener">Vue2 原理浅谈</a></li><li><a href="https://juejin.im/post/5b063962f265da0ddb63dac3" target="_blank" rel="noopener">解密 Vue SSR</a></li><li><a href="https://juejin.im/post/5b610da4e51d45195c07720d" target="_blank" rel="noopener">Vue 全站缓存之 keep-alive ： 动态移除缓存</a></li><li><a href="https://juejin.im/post/5afba3c5f265da0b9e653b6c" target="_blank" rel="noopener">淘宝、网易移动端 px 转换 rem 原理，Vue-cli 实现 px 转换 rem</a></li><li><a href="https://juejin.im/post/5b1a3eba6fb9a01e4320cb68" target="_blank" rel="noopener">Vue 源码的最后一站</a></li><li><a href="https://juejin.im/post/5b71587bf265da282a765096" target="_blank" rel="noopener">vue 全家桶仿某鱼部分布局以及功能实现</a></li><li><a href="https://juejin.im/post/5b1fa77451882513ea5cc2ca" target="_blank" rel="noopener">50 行代码的 MVVM，感受闭包的艺术</a></li><li><a href="https://juejin.im/post/5abdd6f6f265da23793c4458" target="_blank" rel="noopener">不好意思！耽误你的十分钟，让 MVVM 原理还给你</a></li></ul><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><ul><li><a href="https://juejin.im/post/5d085be0f265da1bac401937" target="_blank" rel="noopener">掘金最污的 React16.x 图文视频教程(2 万 5 千字长文-慎入)</a></li><li><a href="https://juejin.im/post/5b506ae0e51d45191a0d4ec9" target="_blank" rel="noopener">React 16 加载性能优化指南</a></li><li><a href="https://juejin.im/post/5cfe4b13f265da1bb13f26a8" target="_blank" rel="noopener">webpack4 的 30 个步骤打造优化到极致的 react 开发环境，如约而至</a></li><li><a href="https://juejin.im/post/5be3ea136fb9a049f9121014" target="_blank" rel="noopener">30 分钟精通 React Hooks</a></li><li><a href="https://juejin.im/post/5a84682ef265da4e83266cc4" target="_blank" rel="noopener">《React 源码解析》系列完结！</a></li><li><a href="https://juejin.im/post/5c0c7304f265da613e22106c" target="_blank" rel="noopener">200 行代码实现简版 react</a></li><li><a href="https://juejin.im/post/5ce24f8ae51d45106477bd45" target="_blank" rel="noopener">可能是你需要的 React + TypeScript 50 条规范和经验</a></li><li><a href="https://juejin.im/post/5b07caf16fb9a07aa83f2977" target="_blank" rel="noopener">TypeScript 2.8 下的终极 React 组件模式</a></li><li><a href="https://juejin.im/post/5ad81c24f265da504c168c85" target="_blank" rel="noopener">怎样学习 React？当然是自己动手实现一个 React 啦</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FSangKa%2Freact-in-patterns-cn" target="_blank" rel="noopener">《React in patterns》 中文版来了</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F39744174" target="_blank" rel="noopener">React 学习路线图 - 2018 版</a></li><li><a href="https://juejin.im/post/5b45c57c51882519790c7441" target="_blank" rel="noopener">你真的理解 setState 吗？</a></li></ul><h2 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h2><ul><li><a href="https://juejin.im/post/5aa3d2056fb9a028c36868aa" target="_blank" rel="noopener">webpack 详解</a></li><li><a href="https://juejin.im/post/5adea0106fb9a07a9d6ff6de" target="_blank" rel="noopener">webpack4-用之初体验，一起敲它十一遍</a></li><li><a href="https://juejin.im/post/5a068c2b5188255851322b8c" target="_blank" rel="noopener">妈妈再也不用担心我不会 webpack 了</a></li><li><a href="https://juejin.im/post/5badd0c5e51d450e4437f07a" target="_blank" rel="noopener">Webpack 揭秘——走向高阶前端的必经之路</a></li><li><a href="https://juejin.im/post/59bb37fa6fb9a00a554f89d2" target="_blank" rel="noopener">webpack：从入门到真实项目配置</a></li><li><a href="https://juejin.im/post/5b304f1f51882574c72f19b0" target="_blank" rel="noopener">Webpack 4 配置最佳实践</a></li><li><a href="https://juejin.im/post/5b4609f5e51d4519596b66a7" target="_blank" rel="noopener">手写一个 webpack4.0 配置</a></li><li><a href="https://juejin.im/post/5cea1e1ae51d4510664d1652" target="_blank" rel="noopener">关于 webpack4 的 14 个知识点,童叟无欺</a></li><li><a href="https://juejin.im/post/5bf61082f265da616a474b5c" target="_blank" rel="noopener">脑阔疼的 webpack 按需加载</a></li><li><a href="https://juejin.im/post/5c25b76ef265da614b120ed0" target="_blank" rel="noopener">📚 免费的渐进式教程：Webpack4 的 16 篇讲解和 16 份代码</a></li><li><a href="https://juejin.im/post/5b192afde51d45069c2efe5a" target="_blank" rel="noopener">手把手教你撸一个简易的 webpack</a></li><li><a href="https://juejin.im/post/5b38d27451882574d87aa5d5" target="_blank" rel="noopener">不聊 webpack 配置，来说说它的原理</a></li><li><a href="https://juejin.im/post/5a23b130f265da432003101a" target="_blank" rel="noopener">简单易懂的 webpack 打包后 JS 的运行过程</a></li><li><a href="https://juejin.im/post/5b652b036fb9a04fa01d616b" target="_blank" rel="noopener">三十分钟掌握 Webpack 性能优化</a></li><li><a href="https://juejin.im/post/5cb36a3ef265da03a1581d6d" target="_blank" rel="noopener">从基础到实战 手摸手带你掌握新版 Webpack4.0 详解 一起读文档</a></li><li><a href="https://juejin.im/post/5be64a7bf265da615304493e" target="_blank" rel="noopener">webpack4 配置详解之慢嚼细咽</a></li><li><a href="https://juejin.im/post/5ac9dc9af265da23884d5543" target="_blank" rel="noopener">带你走进 webpack 世界，成为 webpack 头号玩家。</a></li><li><a href="https://juejin.im/post/5b56909a518825195f499806" target="_blank" rel="noopener">手摸手，带你用合理的姿势使用 webpack4（上）</a></li><li><a href="https://juejin.im/post/5ad1d85f518825651d081c68" target="_blank" rel="noopener">webpack 从此不再是我们的痛点 — 核心基础</a></li><li><a href="https://juejin.im/post/5b9116086fb9a05d05307e96" target="_blank" rel="noopener">webpack4 多页面，多环境配置</a></li><li><a href="https://juejin.im/post/5a63f082f265da3e303c95cc" target="_blank" rel="noopener">webpack 增量打包多页应用</a></li></ul><h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><ul><li><a href="https://juejin.im/post/5ca2e1935188254416288eb2" target="_blank" rel="noopener">ES6、ES7、ES8、ES9、ES10 新特性一览</a></li><li><a href="https://juejin.im/post/5c6234f16fb9a049a81fcca5" target="_blank" rel="noopener">近一万字的 ES6 语法知识点补充</a></li><li><a href="https://juejin.im/post/5b6d6f8ae51d453509566974" target="_blank" rel="noopener">ES6 核心，值得驻足花一天时间来学习</a></li><li><a href="https://juejin.im/post/5bfe05505188252098022400" target="_blank" rel="noopener">ES6 完全使用手册</a></li><li><a href="https://juejin.im/post/5b9cb3336fb9a05d290ee47e" target="_blank" rel="noopener">ES6、ES7、ES8 特性一锅炖(ES6、ES7、ES8 学习指南)</a></li><li><a href="https://juejin.im/post/5aaa37c8f265da23945f365c" target="_blank" rel="noopener">前端模块化：CommonJS,AMD,CMD,ES6</a></li><li><a href="https://juejin.im/post/5cd1ab3df265da03587c142a" target="_blank" rel="noopener">「中高级前端」窥探数据结构的世界- ES6 版</a></li><li><a href="https://juejin.im/post/5acb1847f265da237c693362" target="_blank" rel="noopener">学会了 ES6，就不会写出那样的代码</a></li><li><a href="https://juejin.im/post/5b7b95206fb9a019bd2463d8" target="_blank" rel="noopener">小邵教你玩转 ES6</a></li><li><a href="https://juejin.im/post/59d7790e6fb9a00a496e926a" target="_blank" rel="noopener">ES6 常用知识点概述</a></li><li><a href="https://juejin.im/post/5a08e5c55188252abc5dd96f" target="_blank" rel="noopener">实例感受-es6 的常用语法和优越性</a></li><li><a href="https://juejin.im/post/5abf531d6fb9a028dc412419" target="_blank" rel="noopener">ES6 会这些就够了</a></li><li><a href="https://juejin.im/post/5b2a186cf265da596d04a648" target="_blank" rel="noopener">[译] ES2018（ES9）的新特性</a></li></ul><h2 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h2><ul><li><a href="https://juejin.im/post/5cddf289f265da038f77696c" target="_blank" rel="noopener">关于移动端适配，你必须要知道的</a></li><li><a href="https://juejin.im/post/5b72e1f66fb9a009d018fb94" target="_blank" rel="noopener">移动端调试痛点？——送你五款前端开发利器</a></li><li><a href="https://juejin.im/post/5af918636fb9a07ac5603ecb" target="_blank" rel="noopener">移动端常见 bug 汇总 001</a></li><li><a href="https://juejin.im/post/5b346e8f5188251e1d39bd09" target="_blank" rel="noopener">真的，移动端尺寸自适应与 dpr 无关</a></li><li><a href="https://juejin.im/post/5c0dd7ac6fb9a049c43d7edc" target="_blank" rel="noopener">移动端适配总结</a></li><li><a href="https://juejin.im/post/5b6575b0518825196b01fd85" target="_blank" rel="noopener">web 移动端布局的那些事儿</a></li><li><a href="https://juejin.im/post/5d33fd0f5188256e820c80d4" target="_blank" rel="noopener">实战篇 - 如何实现和淘宝移动端一样的模块化加载 （task-silce）</a></li><li><a href="https://juejin.im/post/5b29f476e51d455892718380" target="_blank" rel="noopener">如何利用 vw+rem 进行移动端布局</a></li><li><a href="https://juejin.im/post/5ad0b52d6fb9a028d82c30c1" target="_blank" rel="noopener">轻松掌握移动端 web 开发【尺寸适配】常用解决方案</a></li><li><a href="https://juejin.im/post/5add7a44f265da0b886d05f8" target="_blank" rel="noopener">移动端适配问题解决方案</a></li><li><a href="https://juejin.im/post/59dc572c6fb9a0450f20e40e" target="_blank" rel="noopener">BetterScroll：可能是目前最好用的移动端滚动插件</a></li><li><a href="https://juejin.im/post/5b6d21daf265da0f9d1a2ed7" target="_blank" rel="noopener">移动端适配知识你到底知多少</a></li><li><a href="https://juejin.im/post/5a02d91ef265da43085d756c" target="_blank" rel="noopener">滴滴 Web 移动端组件库 cube-ui 开源</a></li><li><a href="https://juejin.im/post/5a5f46ac51882573520d6f8b" target="_blank" rel="noopener">移动端自适应个人理解与收集——rem</a></li><li><a href="https://juejin.im/post/5b7efb2ee51d45388b6af96c" target="_blank" rel="noopener">H5 唤起 APP 指南(附开源唤端库)</a></li><li><a href="https://juejin.im/post/5a17c5e26fb9a04527254689" target="_blank" rel="noopener">一次 H5 「保存页面为图片」 的踩坑之旅</a></li><li><a href="https://juejin.im/post/5aa8b00c51882555627cfa0e" target="_blank" rel="noopener">H5 与 APP 混合开发遇到的问题总结</a></li><li><a href="https://juejin.im/post/5b03b2ee5188254284525e87" target="_blank" rel="noopener">移动端 H5 多页开发拍门砖经验</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fyezihaohao.github.io%2F2018%2F03%2F30%2FH5%E6%89%8B%E6%9C%BA%E7%AB%AF%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F" target="_blank" rel="noopener">H5 手机端开发问题汇总及解决方案</a></li><li><a href="https://juejin.im/post/5abc4f8c6fb9a028d37578ab" target="_blank" rel="noopener">multipages-generator 今日发布 👏！妈妈再也不用担心移动端 h5 网站搭建了！</a></li><li><a href="https://juejin.im/post/5a044fd5f265da43333ddabd" target="_blank" rel="noopener">手机/移动前端开发需要注意的 20 个要点</a></li></ul><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><ul><li><a href="https://juejin.im/post/5b8fd1416fb9a05cf3710690" target="_blank" rel="noopener">近两万字小程序攻略发布了</a></li><li><a href="https://juejin.im/post/5b3d9378f265da0f6012eb65" target="_blank" rel="noopener">VS Code 折腾记 - (14) 再来推荐一波大前端适用系列 (Node/React/Vue/小程序/主题/代码体验等) 的插件</a></li><li><a href="https://juejin.im/post/5b481d216fb9a04fdb16a88f" target="_blank" rel="noopener">微信小程序：一个 json 帮你完成分享朋友圈图片</a></li><li><a href="https://juejin.im/post/5ac9b72cf265da23906c486a" target="_blank" rel="noopener">手把手教会你小程序登录鉴权</a></li><li><a href="https://juejin.im/post/5b0ccd4e51882515861d2347" target="_blank" rel="noopener">送给写小程序的你。</a></li><li><a href="https://juejin.im/post/5a61b6a1518825732739af03" target="_blank" rel="noopener">从零开始一个微信小程序版知乎</a></li><li><a href="https://juejin.im/post/5b0e431f51882515497d979f" target="_blank" rel="noopener">只需两步快速获取微信小程序源码</a></li><li><a href="https://juejin.im/post/5b15ce94f265da6e29010554" target="_blank" rel="noopener">滴滴一夏， 小程序专车来了</a></li><li><a href="https://juejin.im/post/5b39bbcc5188252ce018c745" target="_blank" rel="noopener">两天撸一个天气应用微信小程序</a></li><li><a href="https://juejin.im/post/5b6323baf265da0f5511533a" target="_blank" rel="noopener">网易严选商城小程序全栈开发,域名备案中近期上线(mpvue+koa2+mysql)</a></li><li><a href="https://juejin.im/post/5ba57b7c5188255c971fda3a" target="_blank" rel="noopener">做完小程序项目、老板给我加了 6k 薪资～</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FMeituan-Dianping%2Fmpvue" target="_blank" rel="noopener">mpvue - 美团点评开源的基于 Vue 的微信小程序前端框架</a></li><li><a href="https://juejin.im/post/5b72cf88e51d45666436d3c5" target="_blank" rel="noopener">两周撸一个掘金微信小程序</a></li><li><a href="https://juejin.im/post/5ba0bc8d6fb9a05d396f0827" target="_blank" rel="noopener">小程序的全栈开发新时代</a></li><li><a href="https://juejin.im/post/5b74d85751882560fb24b6c5" target="_blank" rel="noopener">小程序开发实践总结</a></li><li><a href="https://juejin.im/post/5baf4a04e51d450ea52fd9a4" target="_blank" rel="noopener">H5 和小程序拍照图片旋转、压缩和上传</a></li></ul><h2 id="设计模式与算法"><a href="#设计模式与算法" class="headerlink" title="设计模式与算法"></a>设计模式与算法</h2><ul><li><a href="https://juejin.im/post/5afe6430518825428630bc4d" target="_blank" rel="noopener">JavaScript 中常见设计模式整理</a></li><li><a href="https://juejin.im/post/59df4f74f265da430f311909" target="_blank" rel="noopener">JavaScript 设计模式</a></li><li><a href="https://juejin.im/post/5c2e10a76fb9a049c0432697" target="_blank" rel="noopener">《JavaScript 设计模式与开发实践》最全知识点汇总大全</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Ftrekhleb%2Fjavascript-algorithms%2Fblob%2Fmaster%2FREADME.zh-CN.md" target="_blank" rel="noopener">JavaScript 算法与数据结构</a></li><li><a href="https://juejin.im/post/5b331bc7f265da598451fd88" target="_blank" rel="noopener">前端你应该了解的数据结构与算法</a></li></ul><h2 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h2><ul><li><a href="https://juejin.im/post/5d23e750f265da1b855c7bbe" target="_blank" rel="noopener">前端 100 问：能搞懂 80% 的请把简历给我</a></li><li><a href="https://juejin.im/post/5b94d8965188255c5a0cdc02" target="_blank" rel="noopener">2018 前端面试总结，看完弄懂，工资少说加 3K | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5c64d15d6fb9a049d37f9c20" target="_blank" rel="noopener">中高级前端大厂面试秘籍，为你保驾护航金三银四，直通大厂(上)</a></li><li><a href="https://juejin.im/post/5b44a485e51d4519945fb6b7" target="_blank" rel="noopener">总结了 17 年初到 18 年初百场前端面试的面试经验(含答案)</a></li><li><a href="https://juejin.im/post/5a998991f265da237f1dbdf9" target="_blank" rel="noopener">2018 春招前端面试: 闯关记(精排精校) | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5aae076d6fb9a028cc6100a9" target="_blank" rel="noopener">前端面试考点多？看这些文章就够了（2019 年 6 月更新版）</a></li><li><a href="https://juejin.im/post/5c9c3989e51d454e3a3902b6" target="_blank" rel="noopener">「中高级前端面试」JavaScript 手写代码无敌秘籍</a></li><li><a href="https://juejin.im/post/5a9b8417518825558251ce15" target="_blank" rel="noopener">记录面试中一些回答不够好的题（Vue 居多） | 掘金技术征文</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000013331105" target="_blank" rel="noopener">面试的信心来源于过硬的基础</a></li><li><a href="https://juejin.im/post/5ac61da66fb9a028c71eae1b" target="_blank" rel="noopener">面试官: 你了解前端路由吗?</a></li><li><a href="https://juejin.im/post/5d124a12f265da1b9163a28d" target="_blank" rel="noopener">这儿有 20 道大厂面试题等你查收</a></li><li><a href="https://juejin.im/post/5cab0c45f265da2513734390" target="_blank" rel="noopener">【面试篇】寒冬求职季之你必须要懂的原生 JS(上)</a></li><li><a href="https://juejin.im/post/5aa8a07cf265da238a3022a4" target="_blank" rel="noopener">几道高级前端面试题解析</a></li><li><a href="https://juejin.im/post/5b2f02cd5188252b937548ab" target="_blank" rel="noopener">BAT 前端经典面试问题：史上最最最详细的手写 Promise 教程</a></li><li><a href="https://juejin.im/post/5d0644976fb9a07ed064b0ca" target="_blank" rel="noopener">[译] 送你 43 道 JavaScript 面试题</a></li><li><a href="https://juejin.im/post/5ad4094e6fb9a028d7011069" target="_blank" rel="noopener">小哥哥,小姐姐,我有一份 tcp、http 面试指南你要吗？</a></li><li><a href="https://juejin.im/post/5befeb5051882511a8527dbe" target="_blank" rel="noopener">一年半经验，百度、有赞、阿里前端面试总结</a></li><li><a href="https://juejin.im/post/5b72f0caf265da282809f3b5" target="_blank" rel="noopener">前端笔试&amp;面试爬坑系列—算法</a></li><li><a href="https://juejin.im/post/5adf0085518825673123da9a" target="_blank" rel="noopener">当面试官问你 Vue 响应式原理，你可以这么回答他</a></li><li><a href="https://juejin.im/post/5d2ee123e51d4577614761f8" target="_blank" rel="noopener">20 道 JS 原理题助你面试一臂之力！</a></li><li><a href="https://juejin.im/post/5a99f80cf265da238c3a1e16" target="_blank" rel="noopener">当面试官问你如何进行性能优化时，你该这么回答(一)</a></li><li><a href="https://juejin.im/post/5cb0315f518825215e61ec14" target="_blank" rel="noopener">【周刊-2】三年大厂面试官-前端面试题（偏难）</a></li><li><a href="https://juejin.im/post/5b31a4b7f265da595725f322" target="_blank" rel="noopener">面试精选之 Promise</a></li><li><a href="https://juejin.im/post/5abb55ee6fb9a028e33b7e0a" target="_blank" rel="noopener">面试官:请你实现一个深克隆</a></li><li><a href="https://juejin.im/post/5c19c1b6e51d451d1e06c163" target="_blank" rel="noopener">腾讯前端面试篇（一）</a></li><li><a href="https://juejin.im/post/5c6977e46fb9a049fd1063dc" target="_blank" rel="noopener">【半月刊】前端高频面试题及答案汇总</a></li><li><a href="https://juejin.im/post/5aad40e4f265da237f1e12ed" target="_blank" rel="noopener">前端笔试题面试题记录（上）| 掘金技术征文</a></li><li><a href="https://juejin.im/post/5cc55c336fb9a032086dd701" target="_blank" rel="noopener">面试官：自己搭建过 vue 开发环境吗？</a></li><li><a href="https://juejin.im/post/5b4a9136f265da0f990d49cb" target="_blank" rel="noopener">地表最强面试图谱</a></li><li><a href="https://juejin.im/post/5d1d52aff265da1bb2774de0" target="_blank" rel="noopener">面试官到底想看什么样的简历？</a></li><li><a href="https://juejin.im/post/5a92c23b5188257a6b06110b" target="_blank" rel="noopener">面试分享：专科半年经验面试阿里前端 P6+总结(附面试真题及答案)</a></li><li><a href="https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf" target="_blank" rel="noopener">面试官: 实现双向绑定 Proxy 比 defineproperty 优劣如何?</a></li><li><a href="https://juejin.im/post/5a59db5a518825732d7f8ce5" target="_blank" rel="noopener">合格前端系列第九弹-前端面试那些事</a></li><li><a href="https://juejin.im/post/5b68f384f265da0fa00a3df0" target="_blank" rel="noopener">一点感悟：当走完所有大厂的实习面试后</a></li><li><a href="https://juejin.im/post/5af3cc4af265da0ba3521028" target="_blank" rel="noopener">社招中级前端笔试面试题总结</a></li><li><a href="https://juejin.im/post/5bf5610be51d452a1353b08d" target="_blank" rel="noopener">2019 年前端面试都聊啥？一起来看看</a></li><li><a href="https://juejin.im/post/5c92f499f265da612647b754" target="_blank" rel="noopener">(中篇)中高级前端大厂面试秘籍，寒冬中为您保驾护航，直通大厂</a></li><li><a href="https://juejin.im/post/5acc17cb51882555745a03f8" target="_blank" rel="noopener">面试题：你能写一个 Vue 的双向数据绑定吗？</a></li><li><a href="https://juejin.im/post/5c02142fe51d4511be77aad7" target="_blank" rel="noopener">面试官(6): 写过『通用前端组件』吗?</a></li><li><a href="https://juejin.im/post/5ce4171ff265da1bd04eb4f3" target="_blank" rel="noopener">2019 前端面试 | “HTML + CSS + JS”专题</a></li><li><a href="https://juejin.im/post/5a96c6326fb9a063626408c8" target="_blank" rel="noopener">2018 美团前端面试题，两年经验，你能答对几道？</a></li><li><a href="https://juejin.im/post/5bd97627f265da39651c0a4b" target="_blank" rel="noopener">三年前端，面试思考（头条蚂蚁美团 offer）</a></li><li><a href="https://juejin.im/post/5cf0733de51d4510803ce34e" target="_blank" rel="noopener">你要的 React 面试知识点，都在这了</a></li><li><a href="https://juejin.im/post/5ca0425e51882567ce181037" target="_blank" rel="noopener">五年面试，三年模拟</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.itcodemonkey.com%2Farticle%2F2853.html" target="_blank" rel="noopener">50 道 CSS 基础面试题（附答案）</a></li><li><a href="https://juejin.im/post/5aa00229f265da239b40fc02" target="_blank" rel="noopener">此面试题版本落后-请勿观看</a></li><li><a href="https://juejin.im/post/5c8e4cd3f265da67c87454a0" target="_blank" rel="noopener">jsliang 的 2019 面试准备</a></li><li><a href="https://juejin.im/post/5b5567b25188256256696ee0" target="_blank" rel="noopener">面试图谱：前端基础技术知识讲解</a></li><li><a href="https://juejin.im/post/5b1a512de51d45068f65ccfe" target="_blank" rel="noopener">JS 高级之面试必须知道的几个点</a></li><li><a href="https://juejin.im/post/5ab70735f265da237a4cf9b1" target="_blank" rel="noopener">大厂前端面试考什么? | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5cbd1e33e51d45789161d053" target="_blank" rel="noopener">【面试篇】寒冬求职季之你必须要懂的原生 JS(中)</a></li><li><a href="https://juejin.im/post/5ab0da85f265da23866fb9b7" target="_blank" rel="noopener">面试分享：2018 阿里巴巴前端面试总结 | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5c3d8956e51d4511dc72c200" target="_blank" rel="noopener">一次弄懂 Event Loop（彻底解决此类面试问题）</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000014321635%3Futm_source%3Dindex-hottest" target="_blank" rel="noopener">面试之 JavaScript 篇</a></li><li><a href="https://juejin.im/post/59cb6307f265da064e1f65b9" target="_blank" rel="noopener">前端面试之 webpack 篇</a></li><li><a href="https://juejin.im/post/5b3c87386fb9a04f9a5cb037" target="_blank" rel="noopener">面试精选之 http 缓存</a></li><li><a href="https://juejin.im/post/5bbaa549e51d450e827b6b13" target="_blank" rel="noopener">一篇文章搞定前端面试</a></li><li><a href="https://juejin.im/post/5c8bb79e6fb9a04a006fe79a" target="_blank" rel="noopener">写给初级前端的面试经验</a></li><li><a href="https://juejin.im/post/5c62b92de51d457fd77b22ce" target="_blank" rel="noopener">前端面试之路二(javaScript 基础整理)</a></li><li><a href="https://juejin.im/post/59ffb4b66fb9a04512385402" target="_blank" rel="noopener">vue 面试题总汇</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fqiu-deqing%2FFE-interview" target="_blank" rel="noopener">分享收集的一大波前端面试题和答案</a></li><li><a href="https://juejin.im/post/5cf495e96fb9a07ef5622025" target="_blank" rel="noopener">公司要求会使用框架 vue，面试题会被问及哪些？</a></li><li><a href="https://juejin.im/post/5cd0bdfc6fb9a031f10ca08c" target="_blank" rel="noopener">前端工程师面试必备（持续更新中）</a></li><li><a href="https://juejin.im/post/5d032b77e51d45777a126183" target="_blank" rel="noopener">面试官（9）：可能是全网最全的 http 面试答案</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Felemefe.github.io%2Fnode-interview%2F%23%2Fsections%2Fzh-cn%2F" target="_blank" rel="noopener">如何通过饿了么 Node.js 面试</a></li><li><a href="https://juejin.im/post/5abf68886fb9a028b54802e0" target="_blank" rel="noopener">（干货）记前端工程师面试题，一起带大家理一理</a></li><li><a href="https://juejin.im/post/5c959f74f265da610c068fa8" target="_blank" rel="noopener">「从源码中学习」面试官都不知道的 Vue 题目答案</a></li><li><a href="https://juejin.im/post/5c7bd72ef265da2de80f7f17" target="_blank" rel="noopener">【半月刊 2】前端高频面试题及答案汇总</a></li><li><a href="https://juejin.im/post/5b4d543ce51d4519610dea67" target="_blank" rel="noopener">记一次凉凉的小米面试</a></li><li><a href="https://juejin.im/post/5ac2fb886fb9a028b86e328c" target="_blank" rel="noopener">面试官:既然 React/Vue 可以用 Event Bus 进行组件通信,你可以实现下吗?</a></li><li><a href="https://juejin.im/post/5b984950f265da0afc2be3bf" target="_blank" rel="noopener">七年切图仔如何面试大厂 web 前端？（沟通软技能总结） | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5a0c170c6fb9a0451c39eff2" target="_blank" rel="noopener">让我印象深刻的 JavaScript 面试题</a></li><li><a href="https://juejin.im/post/5c6d4789f265da2d8e70e164" target="_blank" rel="noopener">面试前如何准备才能提高成功率（含前端面试押题）</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.jackpu.com%2Fnian-hou-fu-xi-zhi-nan%2F" target="_blank" rel="noopener">Web 前端年后跳槽面试复习指南</a></li><li><a href="https://juejin.im/post/5bc5c752f265da0a9a399a62" target="_blank" rel="noopener">从一道面试题说起—js 隐式转换踩坑合集</a></li><li><a href="https://juejin.im/post/5c87b54ce51d455f7943dddb" target="_blank" rel="noopener">2019 面试准备 - JS 防抖与节流</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FLiyuk%2FInterview-Questions-Answers" target="_blank" rel="noopener">再不看就删了！近期大厂前端面试题(链接失效请点原文)</a></li><li><a href="https://juejin.im/post/5cdb7bc26fb9a0321557044d" target="_blank" rel="noopener">【前端面试分享】- 寒冬求职上篇</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.geekjc.com%2Fpost%2F5b1e1e86274bfd42d16a697d" target="_blank" rel="noopener">前端工程师面试题(性能优化)</a></li><li><a href="https://juejin.im/post/5bca74cfe51d450e9163351b" target="_blank" rel="noopener">[译] 以面试官的角度来看 React 工作面试</a></li><li><a href="https://juejin.im/post/5c72a1766fb9a049ea3993e6" target="_blank" rel="noopener">2019 面试准备 - JS 原型与原型链</a></li><li><a href="https://juejin.im/post/59ec3d50f265da431c6f7339" target="_blank" rel="noopener">2018web 前端面试总结</a></li><li><a href="https://juejin.im/post/5b9267b1e51d450e7579af94" target="_blank" rel="noopener">9 月，水了几个大中厂前端面试的一些总结分享 | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5c8f30606fb9a070ef60996d" target="_blank" rel="noopener">寒冬中的前端社招面试</a></li><li><a href="https://juejin.im/post/5ab4ab126fb9a028d4448365" target="_blank" rel="noopener">JavaScript：面试频繁出现的几个易错点</a></li><li><a href="https://juejin.im/post/5ae17a386fb9a07abc299cdd" target="_blank" rel="noopener">面试：页面加载海量数据</a></li><li><a href="https://juejin.im/post/5c9ac3f66fb9a070e056718f" target="_blank" rel="noopener">【半月刊 3】前端高频面试题及答案汇总</a></li><li><a href="https://juejin.im/post/5ae13cfe5188256715475806" target="_blank" rel="noopener">2018 美团、腾讯、头条、蔚来 社招面试随谈</a></li><li><a href="https://juejin.im/post/5bd95d22e51d45685f442f73" target="_blank" rel="noopener">26 个精选的 JavaScript 面试问题</a></li><li><a href="https://juejin.im/post/5cede821f265da1bbd4b5630" target="_blank" rel="noopener">面试必备！webpack 中那些最易混淆的 5 个知识点</a></li><li><a href="https://juejin.im/post/5cb3376bf265da039c0543da" target="_blank" rel="noopener">【半月刊 4】前端高频面试题及答案汇总</a></li><li><a href="https://juejin.im/post/5a6a1dabf265da3e290c6804" target="_blank" rel="noopener">转眼人到中年：前端老程序员无法忘怀的一次百度电话面试</a></li><li><a href="https://juejin.im/post/5b2215f76fb9a00e8f795cd1" target="_blank" rel="noopener">关于 React 面试题汇总</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fblog.ihoey.com%2Fposts%2FInterview%2F2018-02-28-alibaba-interview.html" target="_blank" rel="noopener">面试分享：2018 阿里巴巴前端面试总结(题目+答案)</a></li><li><a href="https://juejin.im/post/5c45112e6fb9a04a027aa8fe" target="_blank" rel="noopener">【进阶 4-3 期】面试题之如何实现一个深拷贝</a></li><li><a href="https://juejin.im/post/5b0562306fb9a07aaf3596c1" target="_blank" rel="noopener">【面试】社招中级前端笔试面试题总结-答案及拓展</a></li><li><a href="https://juejin.im/post/5ba34e54e51d450e5162789b" target="_blank" rel="noopener">2 万 5 千字大厂面经 | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5af99678f265da0b8e7f881e" target="_blank" rel="noopener">毕业一年左右的前端妹子面经总结</a></li><li><a href="https://juejin.im/post/5b19e81de51d454e907bd1c5" target="_blank" rel="noopener">太原面经分享：如何在 vue 面试环节，展示你晋级阿里 P6+的技术功底？</a></li><li><a href="https://juejin.im/post/5ba6e77e6fb9a05d0b14359b" target="_blank" rel="noopener">那些年你踩过的坑，都在这里了～| 掘金技术征文</a></li><li><a href="https://juejin.im/post/5bbc54a2e51d450e5a7445b4" target="_blank" rel="noopener">如何轻松拿到淘宝前端 offer | 掘金技术征文</a></li><li><a href="https://juejin.im/post/59c907d46fb9a00a4746e2db" target="_blank" rel="noopener">腾讯校招前端三面,虐完继续撸|掘金技术征文</a></li><li><a href="https://juejin.im/post/5bb470295188255c5e66f88f" target="_blank" rel="noopener">百度阿里网易大疆等大小厂前端校招面筋 | 掘金技术征文</a></li><li><a href="https://juejin.im/post/5a64541bf265da3e2d338862" target="_blank" rel="noopener">16 年毕业的前端 er 在杭州求职 ing</a></li><li><a href="https://juejin.im/post/5a718cd36fb9a01caa20d8a8" target="_blank" rel="noopener">杭州 17 届前端期待加入一个更好的团队</a></li></ul><h2 id="Electron"><a href="#Electron" class="headerlink" title="Electron"></a>Electron</h2><ul><li><a href="https://juejin.im/post/5ba06b67f265da0ae343e89c" target="_blank" rel="noopener">[electron]终极奥义 五千字教程丢给你</a></li><li><a href="https://juejin.im/post/5c46ab47e51d45522b4f55b1" target="_blank" rel="noopener">Electron 构建跨平台应用 Mac/Windows/Linux</a></li></ul><h2 id="Typescript"><a href="#Typescript" class="headerlink" title="Typescript"></a>Typescript</h2><ul><li><a href="https://juejin.im/post/5b54886ce51d45198f5c75d7" target="_blank" rel="noopener">TypeScript + 大型项目实战</a></li><li><a href="https://juejin.im/post/5a9c004a6fb9a028b92c9e91" target="_blank" rel="noopener">TypeScript 实践</a></li><li><a href="https://juejin.im/post/59c46bc86fb9a00a4636f939" target="_blank" rel="noopener">TypeScript 体系调研报告</a></li><li><a href="https://juejin.im/post/5cd6387d518825682348442d" target="_blank" rel="noopener">TypeScript - 一种思维方式</a></li></ul><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><ul><li><a href="https://juejin.im/post/5c1f8e52f265da6170071e43" target="_blank" rel="noopener">Node - 从 0 基础到实战企业官网</a></li><li><a href="https://juejin.im/post/5b1717a86fb9a01e3e5ce540" target="_blank" rel="noopener">一点感悟：《Node.js 学习笔记》star 数突破 1000+</a></li><li><a href="https://juejin.im/post/5c4c0ee8f265da61117aa527" target="_blank" rel="noopener">一篇文章构建你的 NodeJS 知识体系</a></li><li><a href="https://juejin.im/post/5ba48fc4e51d450e704277fa" target="_blank" rel="noopener">node 进阶——之事无巨细手写 koa 源码</a></li><li><a href="https://juejin.im/post/5ca321f76fb9a05e5d09bb8a" target="_blank" rel="noopener">技术栈：为什么 Node 是小菜前端团队的核心技术栈</a></li><li><a href="https://juejin.im/post/5c77c6bef265da2de6611cff" target="_blank" rel="noopener">用 Node+wechaty 写一个爬虫脚本每天定时给女(男)朋友发微信暖心话</a></li><li><a href="https://juejin.im/post/5c75fa4af265da2d84109219" target="_blank" rel="noopener">用 Node + EJS 写一个爬虫脚本每天定时女朋友发一封暖心邮件</a></li><li><a href="https://juejin.im/post/5d25ce36f265da1ba84ab97a" target="_blank" rel="noopener">想学 Node.js，stream 先有必要搞清楚</a></li><li><a href="https://juejin.im/post/5a31d210f265da431a43330e" target="_blank" rel="noopener">基于 node.js 的脚手架工具开发经历</a></li></ul><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><ul><li><a href="https://juejin.im/post/5b0b7d74518825158e173a0c" target="_blank" rel="noopener">网站性能优化实战——从 12.67s 到 1.06s 的故事</a></li><li><a href="https://juejin.im/post/5b6fa8c86fb9a0099910ac91" target="_blank" rel="noopener">网站性能优化实战——从 12.67s 到 1.06s 的故事</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUxMzcxMzE5Ng%3D%3D%26mid%3D2247489586%26idx%3D1%26sn%3D2168d42df837521da50b3ed7f8932698%26chksm%3Df951ad71ce262467728b7940de1a2311c523f264f4ca7e705712bf655a844fab93706cbe1ca3%26token%3D1792152421%26lang%3Dzh_CN%23rd" target="_blank" rel="noopener">首屏时间从 12.67s 到 1.06s，我是如何做到的？</a></li><li><a href="https://juejin.im/post/5bec223f5188250c102116b5" target="_blank" rel="noopener">用 100 行代码提升 10 倍的性能</a></li><li><a href="https://juejin.im/post/5caa0c2d51882543fa41e478" target="_blank" rel="noopener">【前端词典】5 种滚动吸顶实现方式的比较[性能升级版]</a></li><li><a href="https://juejin.im/post/5a966bd16fb9a0635172a50a" target="_blank" rel="noopener">2018 前端性能优化清单</a></li><li><a href="https://juejin.im/post/5b5dcfb46fb9a04f8f37afbb" target="_blank" rel="noopener">前端性能与异常上报</a></li><li><a href="https://juejin.im/post/5b7a50c0e51d4538af60d995" target="_blank" rel="noopener">5 分钟撸一个前端性能监控工具</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUxMTcwOTM4Mg%3D%3D%26mid%3D2247483962%26idx%3D1%26sn%3Df9337ad983c6303811eb43d07d9f23d5%26chksm%3Df96edb93ce195285943211e645cc683989826abdaaa8ab0b073a20761369ed04843c835c50b7%23rd" target="_blank" rel="noopener">嗨，送你一张 Web 性能优化地图</a></li><li><a href="https://juejin.im/post/5ac1d117f265da2396128b9f" target="_blank" rel="noopener">2018 前端性能检查表</a></li><li><a href="https://juejin.im/post/5b73ef38f265da281e048e51" target="_blank" rel="noopener">前端性能优化之雅虎 35 条军规</a></li><li><a href="https://juejin.im/post/5b9550806fb9a05cff31f7b3" target="_blank" rel="noopener">前端性能优化—js 代码打包</a></li></ul><h2 id="前后端交互"><a href="#前后端交互" class="headerlink" title="前后端交互"></a>前后端交互</h2><ul><li><a href="https://juejin.im/post/5a4e6a43f265da3e303c4787" target="_blank" rel="noopener">WebSocket：5 分钟从入门到精通</a></li><li><a href="https://juejin.im/post/5bc7f6b96fb9a05d3447eef8" target="_blank" rel="noopener">WebSocket 是时候展现你优秀的一面了</a></li><li><a href="https://juejin.im/post/5a1bdf676fb9a045055dd99d" target="_blank" rel="noopener">WebSocket 探秘</a></li><li><a href="https://juejin.im/post/5b7ea1366fb9a01a0b319612" target="_blank" rel="noopener">前后端分离使用 Token 登录解决方案</a></li><li><a href="https://juejin.im/post/5a6c60166fb9a01caf37a5e5" target="_blank" rel="noopener">Token 认证的来龙去脉</a></li><li><a href="https://juejin.im/post/59cb4f49f265da0658153c9a" target="_blank" rel="noopener">注册、登录和 token 的安全之道</a></li><li><a href="https://juejin.im/post/59fc04ecf265da4317697f26" target="_blank" rel="noopener">你敢在 post 和 get 上刁难我，就别怪我装逼了</a></li><li><a href="https://juejin.im/post/5a2ff29c6fb9a045132aac5a" target="_blank" rel="noopener">九个问题从入门到熟悉 HTTPS</a></li><li><a href="https://juejin.im/post/5a39da9af265da4327185dc9" target="_blank" rel="noopener">JS 维护 nginx 反向代理，妈妈再也不用担心我跨域了！</a></li><li><a href="https://juejin.im/post/5bb1cc2af265da0ae5052496" target="_blank" rel="noopener">前端必须懂的计算机网络知识—(跨域、代理、本地存储)</a></li><li><a href="https://juejin.im/post/5a2f92c65188253e2470f16d" target="_blank" rel="noopener">正确面对跨域，别慌</a></li><li><a href="https://juejin.im/post/5c23993de51d457b8c1f4ee1" target="_blank" rel="noopener">九种跨域方式实现原理（完整版）</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fweb.jobbole.com%2F94928%2F" target="_blank" rel="noopener">不要再问我跨域的问题了</a></li><li><a href="https://juejin.im/post/5a6320d56fb9a01cb64ee191" target="_blank" rel="noopener">我知道的跨域与安全</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000012469713" target="_blank" rel="noopener">ajax 跨域，这应该是最全的解决方案了</a></li><li><a href="https://juejin.im/post/5bce886af265da0ac07c8ef8" target="_blank" rel="noopener">socket.io 让每个人都可以开发属于自己的即时通讯</a></li><li><a href="https://juejin.im/post/59e4c02151882578d02f4aca" target="_blank" rel="noopener">谈谈 HTTPS</a></li><li><a href="https://juejin.im/post/5b51f39b5188251a9f24a264" target="_blank" rel="noopener">不务正业的前端之 SSO（单点登录）实践</a></li><li><a href="https://juejin.im/post/5a002b536fb9a045132a1727" target="_blank" rel="noopener">前端需要了解的 SSO 与 CAS 知识</a></li><li><a href="https://juejin.im/post/5cd0438c6fb9a031ec6d3ab2" target="_blank" rel="noopener">前端基础篇之 HTTP 协议</a></li><li><a href="https://juejin.im/post/5ad6ad575188255c272273c4" target="_blank" rel="noopener">分分钟让你理解 HTTPS</a></li><li><a href="https://juejin.im/post/5cd9037ee51d456e5c5babca" target="_blank" rel="noopener">你真的了解 Cookie 和 Session 吗</a></li><li><a href="https://juejin.im/post/59d1f59bf265da06700b0934" target="_blank" rel="noopener">把 cookie 聊清楚</a></li><li><a href="https://juejin.im/post/5b3b870a5188251ac85826b8" target="_blank" rel="noopener">不要用 JWT 替代 session 管理（上）：全面了解 Token,JWT,OAuth,SAML,SSO</a></li><li><a href="https://juejin.im/post/5acde23c5188255cb32e7e76" target="_blank" rel="noopener">从 ajax 到 fetch、axios</a></li><li><a href="https://juejin.im/post/5c7e541b6fb9a049e06415a5" target="_blank" rel="noopener">如何在 Web 关闭页面时发送 Ajax 请求</a></li></ul><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ul><li><a href="https://juejin.im/post/5a54386af265da3e3b7a6317" target="_blank" rel="noopener">如何优雅地使用 Git</a></li><li><a href="https://juejin.im/post/5a2cdfe26fb9a0452936b07f" target="_blank" rel="noopener">🛠Git 常用操作总结</a></li><li><a href="https://juejin.im/post/5afc5242f265da0b7f44bee4" target="_blank" rel="noopener">优雅的提交你的 Git Commit Message</a></li><li><a href="https://juejin.im/post/5c33f49de51d45523070f7bb" target="_blank" rel="noopener">马蹄疾 | 2018(农历年)封山之作，和我一起嚼烂 Git(两万字长文)</a></li><li><a href="https://juejin.im/post/5bd2a0d8e51d457a4e0d4fd5" target="_blank" rel="noopener">超详实 Git 简明教程与命令大全</a></li><li><a href="https://juejin.im/post/5d3edad9f265da03a652f133" target="_blank" rel="noopener">前端进阶必备，github 优质资源整理分享！</a></li></ul><h2 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h2><ul><li><a href="https://juejin.im/post/5c452bac6fb9a049af6d919a" target="_blank" rel="noopener">Flutter 44 集免费基础视频教程 </a></li><li><a href="https://juejin.im/post/5be3d54cf265da611d6624d3" target="_blank" rel="noopener">Flutter 免费视频教程第一季：开发环境搭建</a></li></ul><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><ul><li><a href="https://juejin.im/post/5c4a6fcd518825469414e062" target="_blank" rel="noopener">vue-cli3 项目从搭建优化到 docker 部署</a></li><li><a href="https://juejin.im/post/5a142d7b6fb9a0451170c2c7" target="_blank" rel="noopener">基于 Docker 打造前端持续集成开发环境</a></li><li><a href="https://juejin.im/post/5ad3172c5188257ddb10109a" target="_blank" rel="noopener">从 0 开始了解 Docker</a></li><li><a href="https://juejin.im/post/5cce4b1cf265da0373719819" target="_blank" rel="noopener">[手把手系列之]Docker 部署 vue 项目</a></li><li><a href="https://juejin.im/post/5c83cbaa6fb9a04a0f65fdaa" target="_blank" rel="noopener">如何使用 docker 部署前端应用</a></li></ul><h2 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h2><ul><li><a href="https://juejin.im/post/5bea48c4e51d454e5b5f19e8" target="_blank" rel="noopener">写给前端开发者不一样的 VSCode 配置(JS/React)</a></li><li><a href="https://juejin.im/post/5ad13d8a6fb9a028ce7c0721" target="_blank" rel="noopener">能让你开发效率翻倍的 VSCode 插件配置（中）</a></li><li><a href="https://juejin.im/post/5a08d1d6f265da430f31950e" target="_blank" rel="noopener">能让你开发效率翻倍的 VSCode 插件配置（上）</a></li><li><a href="https://juejin.im/post/5d34fdfff265da1b897b0c8d" target="_blank" rel="noopener">21 个 VSCode 快捷键，让代码更快，更有趣</a></li><li><a href="https://juejin.im/post/5b123ace6fb9a01e6f560a4b" target="_blank" rel="noopener">强大的 VSCode</a></li><li><a href="https://juejin.im/post/5a704d84518825734f5300c8" target="_blank" rel="noopener">VS Code 折腾记 - (12) 春节前的最后一波插件推荐(前端/协作/主题)</a></li><li><a href="https://juejin.im/post/5bc55606e51d450e853075c9" target="_blank" rel="noopener">VS Code：让你工作效率翻倍的 23 个插件和 23 个编辑技巧</a></li><li><a href="https://juejin.im/post/5b99a927f265da0a922399cd" target="_blank" rel="noopener">30 个极大提高开发效率的 Visual Studio Code 插件</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.cnblogs.com%2FSroot%2Fp%2F7429186.html" target="_blank" rel="noopener">实用的 Visual Studio Code 插件</a></li><li><a href="https://juejin.im/post/5c356b106fb9a049ef26c368" target="_blank" rel="noopener">VS Code 折腾记 - (15) 再来一波大前端适用系列的插件(主打编码体验改善)</a></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://juejin.im/post/5cc1da82f265da036023b628" target="_blank" rel="noopener">一名【合格】前端工程师的自检清单</a></li><li><a href="https://juejin.im/post/5a5bc8c36fb9a01ca26774eb" target="_blank" rel="noopener">技术胖 155 集前端视频教程-全部免费观看</a></li><li><a href="https://juejin.im/post/5c11bf145188252704368b98" target="_blank" rel="noopener">新年献礼 技术胖 262 集前端免费视频 让您走的更容易些</a></li><li><a href="https://juejin.im/post/5ba7d5dd5188255c6140cc9d" target="_blank" rel="noopener">前端常用插件、工具类库汇总，不要重复造轮子啦！！！</a></li><li><a href="https://juejin.im/post/5d387f696fb9a07eeb13ea60" target="_blank" rel="noopener">一个合格(优秀)的前端都应该阅读这些文章</a></li><li><a href="https://juejin.im/post/5cea1f705188250640005472" target="_blank" rel="noopener">大型项目前端架构浅谈（8000 字原创）</a></li><li><a href="https://juejin.im/post/5a0c1956f265da430a501f51" target="_blank" rel="noopener">个人分享–web 前端学习资源分享</a></li><li><a href="https://juejin.im/post/5b3adfe2e51d4555b17e85df" target="_blank" rel="noopener">2018 上半年掘金微信群日报优质文章合集：前端篇</a></li><li><a href="https://juejin.im/post/5aa252ac518825558001d5de" target="_blank" rel="noopener">干货!各种常见布局实现+知名网站实例分析</a></li><li><a href="https://juejin.im/post/5bdfb387e51d452c8e0aa902" target="_blank" rel="noopener">年终回顾，为你汇总一份「前端技术清单」</a></li><li><a href="https://juejin.im/post/5ae95f17f265da0b93481dec" target="_blank" rel="noopener">四月前端知识集锦（每月不可错过的文章集锦）</a></li><li><a href="https://juejin.im/post/5bd7a6046fb9a05d2c43f8c7" target="_blank" rel="noopener">前端必会的 Nginx 入门视频教程(共 11 集)</a></li><li><a href="https://juejin.im/post/5a3b56b4518825089e501fe1" target="_blank" rel="noopener">2017 下半年掘金日报优质文章合集：前端篇</a></li><li><a href="https://juejin.im/post/5bacbd395188255c8d0fd4b2" target="_blank" rel="noopener">Nginx 与前端开发</a></li><li><a href="https://juejin.im/post/5cdcd42551882568651554e6" target="_blank" rel="noopener">正则表达式不要背</a></li><li><a href="https://juejin.im/post/5d0878aaf265da1b83338f74" target="_blank" rel="noopener">8 年前端开发的知识点沉淀(不知道会多少字，一直写下去吧…)</a></li><li><a href="https://juejin.im/post/5af53823f265da0b75282b0f" target="_blank" rel="noopener">chrome 开发者工具各种骚技巧</a></li><li><a href="https://juejin.im/post/5a519d305188257327396da5" target="_blank" rel="noopener">2018 前端值得关注的技术</a></li><li><a href="https://juejin.im/post/5b01336af265da0b8a67e5c9" target="_blank" rel="noopener">谁说前端不需要懂-Nginx 反向代理与负载均衡</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fw3ctrain.com%2F2018%2F08%2F20%2Ftrigonometry-you-must-know%2F" target="_blank" rel="noopener">前端程序员必须掌握之三角函数在前端动画中的应用</a></li><li><a href="https://juejin.im/post/5a961d496fb9a06356314a36" target="_blank" rel="noopener">前端知识集锦</a></li><li><a href="https://juejin.im/post/5a193b4bf265da43052e528a" target="_blank" rel="noopener">前端本地文件操作与上传</a></li><li><a href="https://juejin.im/post/5b5db5b8e51d4519155720d2" target="_blank" rel="noopener">可能是最好的正则表达式的教程笔记了吧…</a></li><li><a href="https://juejin.im/post/5abb22925188255c4c1050e0" target="_blank" rel="noopener">3 月前端知识集锦</a></li><li><a href="https://juejin.im/post/59cb0d0b5188257e876a2d27" target="_blank" rel="noopener">如何管理好 10 万行代码的前端单页面应用</a></li><li><a href="https://juejin.im/post/5a473a2df265da431441098c" target="_blank" rel="noopener">B 站的前端之路</a></li><li><a href="https://juejin.im/post/5d1ea7a8e51d454fd8057bea" target="_blank" rel="noopener">为什么视频网站的视频链接地址是 blob？</a></li><li><a href="https://juejin.im/post/5ad1980e6fb9a028c42ea1be" target="_blank" rel="noopener">实战笔记：Jenkins 打造强大的前端自动化工作流</a></li><li><a href="https://juejin.im/post/5d1589c8e51d45776031b02e" target="_blank" rel="noopener">哪些技术会决定前端开发者的未来发展？</a></li><li><a href="https://juejin.im/post/5a490d8051882511793e8a5f" target="_blank" rel="noopener">送给前端开发者的一份新年礼物</a></li><li><a href="https://juejin.im/post/5afe3735518825426539afce" target="_blank" rel="noopener">如何阅读大型前端开源项目的源码</a></li><li><a href="https://juejin.im/post/5c75d34851882564965edb23" target="_blank" rel="noopener">我如何零基础转行成为一个自信的前端</a></li><li><a href="https://juejin.im/post/5a9224c6f265da4e710f7786" target="_blank" rel="noopener">细数国内外的前端大牛</a></li><li><a href="https://juejin.im/post/5ab3f77df265da2392364341" target="_blank" rel="noopener">2018 年了，你还是只会 npm install 吗？</a></li><li><a href="https://juejin.im/post/5b911f306fb9a05cdb1013b9" target="_blank" rel="noopener">如何保障前端项目的代码质量</a></li><li><a href="https://juejin.im/post/5b6349716fb9a04f834669d6" target="_blank" rel="noopener">可视化搭建前端工程 - 阿里飞冰了解一下</a></li><li><a href="https://juejin.im/post/5c3ff18b6fb9a04a0a5f76aa" target="_blank" rel="noopener">让老板虎躯一震的前端技术，KPI 杀手</a></li><li><a href="https://juejin.im/post/5d003f51e51d454fbe24a661" target="_blank" rel="noopener">前端工作学习相关网站收集整理</a></li><li><a href="https://juejin.im/post/5b2f4790e51d45589e7bd63d" target="_blank" rel="noopener">[杂谈]了解一些额外知识，让前端开发锦上添花</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FSangKa%2FPWA-Book-CN" target="_blank" rel="noopener">第一本 PWA 中文书</a></li><li><a href="https://juejin.im/post/5c92446b6fb9a070c022f0e2" target="_blank" rel="noopener">【前端词典】分享 8 个有趣且实用的 API</a></li><li><a href="https://juejin.im/post/59bb864b5188257e7a427c09" target="_blank" rel="noopener">手摸手，带你优雅的使用 icon</a></li><li><a href="https://juejin.im/post/5adc8e18518825672b0352a8" target="_blank" rel="noopener">重构 - 改善代码的各方面问题</a></li><li><a href="https://juejin.im/post/5c74d4b9e51d4512c37ea03b" target="_blank" rel="noopener">我在淘宝做前端的这三年 — 第一年</a></li><li><a href="https://juejin.im/post/5c1f01fef265da61587723f4" target="_blank" rel="noopener">五星推荐的系列文章清单</a></li><li><a href="https://juejin.im/post/5cf765275188257c6b51775f" target="_blank" rel="noopener">前端大文件上传</a></li><li><a href="https://juejin.im/post/5d08d3d3f265da1b7e103a4d" target="_blank" rel="noopener">前端工程化（5）：你所需要的 npm 知识储备都在这了</a></li><li><a href="https://juejin.im/post/59ffad656fb9a0450b65c4c0" target="_blank" rel="noopener">web 调试优化-chrome 开发者工具不完全指南</a></li><li><a href="https://juejin.im/post/5aaa06e4f265da237b21cf63" target="_blank" rel="noopener">如何写一个通用的 README 规范</a></li><li><a href="https://juejin.im/post/5b9e61b15188255c980bc6fd" target="_blank" rel="noopener">作为前端你拿什么证明网站体验？</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Flitten.me%2F2017%2F07%2F09%2Fprevent-spiders%2F" target="_blank" rel="noopener">反击爬虫，前端工程师的脑洞可以有多大？</a></li><li><a href="https://juejin.im/post/5c6bbf0f6fb9a049ba4224fd" target="_blank" rel="noopener">如何编写高质量的函数 – 敲山震虎篇</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.zcfy.cc%2Farticle%2Fthe-best-front-end-hacking-cheatsheets-all-in-one-place-4520.html%3Ft%3Dnew" target="_blank" rel="noopener">好用的前端 API 备忘录</a></li><li><a href="https://juejin.im/post/59e6a995518825619a01c433" target="_blank" rel="noopener">iView 发布后台管理系统 iview-admin，没错，它就是你想要的</a></li><li><a href="https://juejin.im/post/5b3da006e51d4518f140edb2" target="_blank" rel="noopener">如何机智地回答浏览器兼容性问题</a></li><li><a href="https://juejin.im/post/5afede99f265da0b82630af8" target="_blank" rel="noopener">ESLint 里的规则教会我，无规矩 不编程</a></li><li><a href="https://juejin.im/post/5cf5f358e51d45778f076ce5" target="_blank" rel="noopener">分享阿里前端 p7 架构图谱</a></li><li><a href="https://juejin.im/post/5c17ad756fb9a049ff4e0a62" target="_blank" rel="noopener">前端模块化详解(完整版)</a></li><li><a href="https://juejin.im/post/5c3c4b3551882524a5420119" target="_blank" rel="noopener">这应该是你见过的最全前端下载总结</a></li><li><a href="https://juejin.im/post/5c617c576fb9a049e93d33a4" target="_blank" rel="noopener">给 2019 前端的 5 个建议</a></li><li><a href="https://juejin.im/post/5c0dd824f265da611a47b080" target="_blank" rel="noopener">想写好前端，先练好内功</a></li><li><a href="https://juejin.im/post/5cc7d540e51d456e537ef39e" target="_blank" rel="noopener">我是如何将业务代码写优雅的</a></li><li><a href="https://juejin.im/post/5b4ffa045188251b134e7211" target="_blank" rel="noopener">水波图实现原理</a></li><li><a href="https://juejin.im/post/5c8e5e4951882545c109ae9c" target="_blank" rel="noopener">让虚拟 DOM 和 DOM-diff 不再成为你的绊脚石</a></li><li><a href="https://juejin.im/post/5cd8c361f265da03a33c5521" target="_blank" rel="noopener">25 岁，毕业写前端的这三年</a></li><li><a href="https://juejin.im/post/5c7dafe8f265da2de25bab27" target="_blank" rel="noopener">我在淘宝做前端的这三年 — 第二年</a></li><li><a href="https://juejin.im/post/5b6ad6b0e51d4519171766e2" target="_blank" rel="noopener">[前端开发]–分享个人习惯的命名方式</a></li><li><a href="https://juejin.im/post/5c9075305188252d5c743520" target="_blank" rel="noopener">前端构建秘籍</a></li><li><a href="https://juejin.im/post/5be54a286fb9a049ae07641b" target="_blank" rel="noopener">弹幕，是怎样练成的？</a></li><li><a href="https://juejin.im/post/5b66993ee51d451924734c35" target="_blank" rel="noopener">前端 er 怎样操作剪切复制以及禁止复制+破解等</a></li><li><a href="https://juejin.im/post/5b28d4fbe51d45587b47fd43" target="_blank" rel="noopener">一套比较完整的前端技术选型，需要规整哪些东西，你知道不？</a></li><li><a href="https://juejin.im/post/5c1606d9f265da613d7bf7a4" target="_blank" rel="noopener">你（可能）不知道的 web api</a></li><li><a href="https://juejin.im/post/5bfc21d2e51d4544313df666" target="_blank" rel="noopener">平庸前端码农之蜕变 — AST</a></li><li><a href="https://juejin.im/post/5c591fda6fb9a049dc02b1cc" target="_blank" rel="noopener">【前端词典】进阶必备的网络基础（上）</a></li><li><a href="https://juejin.im/post/5c85a64d6fb9a04a0e2e038c" target="_blank" rel="noopener">前端开发者必备的 Nginx 知识</a></li><li><a href="https://juejin.im/post/5c2c47dcf265da616d544a53" target="_blank" rel="noopener">前端中的 IoC 理念</a></li><li><a href="https://juejin.im/post/5cb5c3445188256c83279255" target="_blank" rel="noopener">前端代码质量管理（一）</a></li><li><a href="https://juejin.im/post/5b125ad3e51d450688133f22" target="_blank" rel="noopener">发布订阅模式，在工作中它的能量超乎你的想象</a></li><li><a href="https://juejin.im/post/5a22af716fb9a045132a825c" target="_blank" rel="noopener">如果有人问你爬虫抓取技术的门道，请叫他来看这篇文章</a></li><li><a href="https://juejin.im/post/5c21b584e51d4548ac6f6c99" target="_blank" rel="noopener">深入 Babel，这一篇就够了</a></li><li><a href="https://juejin.im/post/5b4b73e7f265da0f96287f0a" target="_blank" rel="noopener">[浅析]特定场景下取代 if-else 和 switch 的方案</a></li><li><a href="https://juejin.im/post/5b0c3b53f265da09253cbed0" target="_blank" rel="noopener">懒加载和预加载</a></li><li><a href="https://juejin.im/post/5aed6da16fb9a07aac2457f6" target="_blank" rel="noopener">如何判断用户浏览器以及一些前端常用的正则表单验证</a></li><li><a href="https://juejin.im/post/5c136bd16fb9a049d37efc47" target="_blank" rel="noopener">前端缓存最佳实践</a></li><li><a href="https://juejin.im/post/5a12881a6fb9a044fd115dd4" target="_blank" rel="noopener">浅谈前端线上部署与运维</a></li><li><a href="https://juejin.im/post/5a0b29756fb9a045167cb643" target="_blank" rel="noopener">别再拿奇技淫巧搬砖了</a></li><li><a href="https://juejin.im/post/5bee7dd4e51d451f5b54cbb4" target="_blank" rel="noopener">前端黑科技：美团网页首帧优化实践</a></li><li><a href="https://juejin.im/post/5c99c17df265da6129788ae2" target="_blank" rel="noopener">技术栈：小菜前端的技术栈是如何规划和演进的</a></li><li><a href="https://juejin.im/post/5d37d982e51d45108c59a635" target="_blank" rel="noopener">【中高级前端必备】手摸手教你撸一个脚手架</a></li><li><a href="https://juejin.im/post/5b626a096fb9a04fdd7d7433" target="_blank" rel="noopener">单枪匹马撸个聊天室, 支持 Web/Android/iOS 三端</a></li><li><a href="https://juejin.im/post/59c4c9d85188254f58412d17" target="_blank" rel="noopener">移动 Web 开发问题和优化小结</a></li><li><a href="https://juejin.im/post/5d1c6550518825330a3bfa01" target="_blank" rel="noopener">前端团队代码评审 CheckList 清单</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FC6HrDJnQivNMIBz5jjcm6g" target="_blank" rel="noopener">前端工程师必备十大网站</a></li><li><a href="https://juejin.im/post/59dad63ff265da065270d49e" target="_blank" rel="noopener">实践中的前后端分离</a></li><li><a href="https://juejin.im/post/5a52f138f265da3e5b32a41b" target="_blank" rel="noopener">把前端监控做到极致</a></li><li><a href="https://juejin.im/post/5a9759a16fb9a0635b5360b3" target="_blank" rel="noopener">手把手教你如何编写一个前端图片压缩、方向纠正、预览、上传插件</a></li><li><a href="https://juejin.im/post/5a8d720a5188257a67177c3c" target="_blank" rel="noopener">程序员的小浪漫—-烟火</a></li><li><a href="https://juejin.im/post/59e5a86c51882578bf185dba" target="_blank" rel="noopener">无头浏览器 Puppeteer 初探</a></li><li><a href="https://juejin.im/post/5b50c8b76fb9a04fd3439215" target="_blank" rel="noopener">优雅的类写法</a></li><li><a href="https://juejin.im/post/59c4d696f265da065d2b7843" target="_blank" rel="noopener">网易严选 App 感受 Weex 开发（已完结）</a></li><li><a href="https://juejin.im/post/5b10dd36e51d4506e04cf802" target="_blank" rel="noopener">深入框架本源系列 —— Virtual Dom</a></li><li><a href="https://juejin.im/post/5a372716518825258a5fbc80" target="_blank" rel="noopener">搭建一个前端监控系统,不再错过 BUG</a></li><li><a href="https://juejin.im/post/5a6c87c46fb9a01ca560b4d7" target="_blank" rel="noopener">缓存详解</a></li><li><a href="https://juejin.im/post/5d1fe6be51882579db031a6d" target="_blank" rel="noopener">从头开始，彻底理解服务端渲染原理(8 千字汇总长文)</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000012578794" target="_blank" rel="noopener">很全很全的前端本地存储讲解</a></li><li><a href="https://juejin.im/post/5b09a641f265da0dcd0b674f" target="_blank" rel="noopener">新一代的前端存储方案–indexedDB</a></li><li><a href="https://juejin.im/post/5bf174396fb9a049ca36f13d" target="_blank" rel="noopener">正则表达式详解及实战</a></li><li><a href="https://juejin.im/post/5b8bf7e3e51d4538c210c6b0" target="_blank" rel="noopener">如何实现前端录音功能</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fhpoenixf.com%2F%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97-%E7%9B%AE%E5%BD%95.html" target="_blank" rel="noopener">前端进阶系列-目录</a></li><li><a href="https://juejin.im/post/5c09a80151882521c81168a2" target="_blank" rel="noopener">【译】你不知道的 Chrome 调试工具技巧 第一天：console 中的 ‘$’</a></li><li><a href="https://juejin.im/post/5c0d2622e51d4529ee234272" target="_blank" rel="noopener">ECharts 打造在线个人简历</a></li><li><a href="https://juejin.im/post/5b62d68df265da0f9d1a1cd6" target="_blank" rel="noopener">前端监控和前端埋点方案设计</a></li><li><a href="https://juejin.im/post/5b729909e51d45662434aef0" target="_blank" rel="noopener">开源库架构实战——从 0 到 1 搭建属于你自己的开源库</a></li><li><a href="https://juejin.im/post/5d24096ee51d454d1d6285a1" target="_blank" rel="noopener">有赞前端质量保障体系</a></li><li><a href="https://juejin.im/post/5a474c8ff265da430a50ea57" target="_blank" rel="noopener">未来的前端工程师</a></li><li><a href="https://juejin.im/post/5a069b6d51882509e5432656" target="_blank" rel="noopener">一篇文章带你熟悉 TCP/IP 协议（网络协议篇二）</a></li><li><a href="https://juejin.im/post/5afd6a88f265da0b9127a879" target="_blank" rel="noopener">优化页面的打开速度，要不要了解一下~</a></li><li><a href="https://juejin.im/post/5a5b2a5c6fb9a01cbc6e59f9" target="_blank" rel="noopener">重构 - 代码整洁之道</a></li><li><a href="https://juejin.im/post/5c811e426fb9a04a0c2f3bdb" target="_blank" rel="noopener">我在淘宝做前端的这三年 — 第三年</a></li><li><a href="https://juejin.im/post/5a5e28b2f265da3e355b1451" target="_blank" rel="noopener">2018 Web 开发者最佳学习路线</a></li><li><a href="https://juejin.im/post/5cfe4e8a6fb9a07ec63b09a4" target="_blank" rel="noopener">富文本原理了解一下？</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fjeffjade.com%2F2017%2F12%2F17%2F134-kinds-of-toss-using-puppeteer%2F" target="_blank" rel="noopener">大前端神器安利之 Puppeteer</a></li><li><a href="https://juejin.im/post/5b890c386fb9a019c771713a" target="_blank" rel="noopener">少侠，留步，图片预览术</a></li><li><a href="https://juejin.im/post/5a9923e9518825558251c96a" target="_blank" rel="noopener">浏览器的回流与重绘 (Reflow &amp; Repaint)</a></li><li><a href="https://juejin.im/post/5a97bb3951882555867ecffc" target="_blank" rel="noopener">用 Canvas 画一只会跟着鼠标走的小狗</a></li><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fjspang.com%2F2017%2F11%2F13%2Fkoa2%2F" target="_blank" rel="noopener">前端挑战全栈 13 集原创 Koa2.x 免费视频奉上</a></li><li><a href="https://juejin.im/post/5b0cf331f265da0905017b48" target="_blank" rel="noopener">学习笔记——正则匹配方法整理</a></li><li><a href="https://juejin.im/post/59ed37f5f265da431e15eaac" target="_blank" rel="noopener">HTML5 桌面通知：Notification API</a></li><li><a href="https://juejin.im/post/5a5380a6518825733365e62a" target="_blank" rel="noopener">前后端分离实践有感</a></li><li><a href="https://juejin.im/post/5b762bace51d45556f41c431" target="_blank" rel="noopener">写给工程师的十条精进原则</a></li><li><a href="https://juejin.im/post/5bbc1b0c6fb9a05cf230140c" target="_blank" rel="noopener">优秀前端必知的话题：我们应该做些力所能及的优化</a></li><li><a href="https://juejin.im/post/5b7e74ce51882542a92ba0e9" target="_blank" rel="noopener">动画道路上的新宠 – Lottie</a></li><li><a href="https://juejin.im/post/5bad9140e51d450e935c6d64" target="_blank" rel="noopener">前端安全系列（一）：如何防止 XSS 攻击？</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fcalpa.me%2F2018%2F11%2F05%2Ffront-end-daily-improving-learning-list%3Futm_source%3Djuejin" target="_blank" rel="noopener">前端工程师的日常修炼清单</a></li><li><a href="https://juejin.im/post/5c178aaaf265da6147702108" target="_blank" rel="noopener">前端埋点统计方案思考</a></li><li><a href="https://juejin.im/post/5b1d5b3951882513e83b8c78" target="_blank" rel="noopener">重构 - 用各种方式优化自己的函数库</a></li><li><a href="https://juejin.im/post/5d1178c3e51d45108223fc92" target="_blank" rel="noopener">这个前端写的免费 Web 版 PS，让他三十岁前财务自由</a></li><li><a href="https://juejin.im/post/5b3731b36fb9a00e5326f087" target="_blank" rel="noopener">[译文] 初学者应该了解的数据结构：Array、HashMap 与 List</a></li><li><a href="https://juejin.im/post/5c19c5e0e51d4502a232c1c6" target="_blank" rel="noopener">一口(很长的)气了解 babel</a></li><li><a href="https://juejin.im/post/5b921b415188255c9031b0c3" target="_blank" rel="noopener">用微前端的方式搭建类单页应用</a></li><li><a href="https://juejin.im/post/5a20fe96f265da431120025b" target="_blank" rel="noopener">一个炫酷大屏展示页的打造过程</a></li><li><a href="https://juejin.im/post/5b20758d5188257d555c5c34" target="_blank" rel="noopener">聊天系统很复杂？前端工程师也能完成！</a></li><li><a href="https://juejin.im/post/5cae9de95188251ae2324ec3" target="_blank" rel="noopener">前端想要了解的 Nginx</a></li><li><a href="https://juejin.im/post/5bc823d46fb9a05d1d2e3fc9" target="_blank" rel="noopener">腾讯发布前端组件框架 Omi，全面拥抱 Web Components</a></li><li><a href="https://juejin.im/post/5ac43e7c6fb9a028d1414f84" target="_blank" rel="noopener">前端常见问题整理</a></li><li><a href="https://juejin.im/post/5ca0c0abe51d4553a942c17d" target="_blank" rel="noopener">你不知道的浏览器页面渲染机制</a></li><li><a href="https://juejin.im/post/5c9ac607f265da6103588b31" target="_blank" rel="noopener">全面分析前端的网络请求方式</a></li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Faotu.io%2Fnotes%2F2018%2F06%2F07%2FTaro%2F" target="_blank" rel="noopener">多端统一开发框架 - Taro</a></li><li><a href="https://juejin.im/post/5c860282e51d45531330e10e" target="_blank" rel="noopener">让你的网页更丝滑（一）</a></li><li><a href="https://juejin.im/post/5aae8b4f5188255588052ffb" target="_blank" rel="noopener">大道至简–API 设计的美学</a></li><li><a href="https://juejin.im/post/5a9e8ad5f265da23a40456d4" target="_blank" rel="noopener">什么是 PWA</a></li><li><a href="https://juejin.im/post/5b4160f4f265da0f83646849" target="_blank" rel="noopener">接口咋整？前端数据药神来也</a></li><li><a href="https://juejin.im/post/5a2bc28f6fb9a044fe464b19" target="_blank" rel="noopener">学习 Less-看这篇就够了</a></li><li><a href="https://juejin.im/post/5ad04d20f265da238440feb9" target="_blank" rel="noopener">前端必会的抓包工具</a></li><li><a href="https://juejin.im/post/5ae56927f265da0b7e0c0968" target="_blank" rel="noopener">前端将数据转化为弹幕效果的实现方式</a></li><li><a href="https://juejin.im/post/5cb9e563f265da03712999e8" target="_blank" rel="noopener">[前端漫谈_5] 从 IIFE 聊到 Babel 带你深入了解前端模块化发展体系</a></li><li><a href="https://juejin.im/post/5ce6b9c9f265da1b7b31637c" target="_blank" rel="noopener">【前端词典】如何向老板解释反向代理</a></li><li><a href="https://juejin.im/post/5bd2f19051882526d14975d2" target="_blank" rel="noopener">厌倦了写活动页？快来撸一个页面生成器吧！</a></li><li><a href="https://juejin.im/post/5c06a3b35188257f30199529" target="_blank" rel="noopener">2019 年如何打造自己的“前端品牌”</a></li><li><a href="https://juejin.im/post/59dc2b7a6fb9a0451869ae3a" target="_blank" rel="noopener">前端安全知识</a></li><li><a href="https://juejin.im/post/5abc4c0d6fb9a028d3757884" target="_blank" rel="noopener">如何写一个高逼格 README</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热门文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端十大经典算法</title>
      <link href="/2018/09/04/algorithm/"/>
      <url>/2018/09/04/algorithm/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1362393380&auto=1&height=66"></iframe><h2 id="算法概述"><a href="#算法概述" class="headerlink" title="算法概述"></a>算法概述</h2><h3 id="算法分类"><a href="#算法分类" class="headerlink" title="算法分类"></a>算法分类</h3><p>十种常见排序算法可以分为两大类：</p><blockquote><p><strong>非线性时间比较类排序</strong>：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此称为非线性时间比较类排序。</p><p><strong>线性时间非比较类排序</strong>：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此称为线性时间非比较类排序。 </p></blockquote><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf11.png" alt="img"></p><h3 id="算法复杂度"><a href="#算法复杂度" class="headerlink" title="算法复杂度"></a>算法复杂度</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf12.png" alt="img"></p><h3 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h3><blockquote><p><strong>稳定</strong>：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。</p><p><strong>不稳定</strong>：如果a原本在b的前面，而a=b，排序之后 a 可能会出现在 b 的后面。</p><p><strong>时间复杂度</strong>：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。</p><p><strong>空间复杂度：</strong>是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。 </p></blockquote><h2 id="冒泡排序（Bubble-Sort）"><a href="#冒泡排序（Bubble-Sort）" class="headerlink" title="冒泡排序（Bubble Sort）"></a>冒泡排序（Bubble Sort）</h2><p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 </p><h3 id="1-1-算法描述"><a href="#1-1-算法描述" class="headerlink" title="1.1 算法描述"></a>1.1 算法描述</h3><ul><li>比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</li><li>针对所有的元素重复以上的步骤，除了最后一个；</li><li>重复步骤1~3，直到排序完成。</li></ul><h3 id="1-2-动图演示"><a href="#1-2-动图演示" class="headerlink" title="1.2 动图演示"></a>1.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf1.gif" alt="img"></p><p>1.3 代码实现</p><pre><code class="js">function bubbleSort(arr) {    var len = arr.length;    for (var i = 0; i &lt; len - 1; i++) {        for (var j = 0; j &lt; len - 1 - i; j++) {            if (arr[j] &gt; arr[j+1]) {       // 相邻元素两两对比                var temp = arr[j+1];       // 元素交换                arr[j+1] = arr[j];                arr[j] = temp;            }        }    }    return arr;}</code></pre><h2 id="选择排序（Selection-Sort）"><a href="#选择排序（Selection-Sort）" class="headerlink" title="选择排序（Selection Sort）"></a>选择排序（Selection Sort）</h2><p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。 </p><h3 id="2-1-算法描述"><a href="#2-1-算法描述" class="headerlink" title="2.1 算法描述"></a>2.1 算法描述</h3><p>n个记录的直接选择排序可经过n-1趟直接选择排序得到有序结果。具体算法描述如下：</p><ul><li>初始状态：无序区为R[1..n]，有序区为空；</li><li>第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1..i-1]和R(i..n）。该趟排序从当前无序区中-选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，使R[1..i]和R[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；</li><li>n-1趟结束，数组有序化了。</li></ul><h3 id="2-2-动图演示"><a href="#2-2-动图演示" class="headerlink" title="2.2 动图演示"></a>2.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf2.gif" alt="img">　　</p><h3 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h3><pre><code class="js">function selectionSort(arr) {    var len = arr.length;    var minIndex, temp;    for (var i = 0; i &lt; len - 1; i++) {        minIndex = i;        for (var j = i + 1; j &lt; len; j++) {            if (arr[j] &lt; arr[minIndex]) {    // 寻找最小的数                minIndex = j;                // 将最小数的索引保存            }        }        temp = arr[i];        arr[i] = arr[minIndex];        arr[minIndex] = temp;    }    return arr;} </code></pre><h3 id="2-4-算法分析"><a href="#2-4-算法分析" class="headerlink" title="2.4 算法分析"></a>2.4 算法分析</h3><p>表现最稳定的排序算法之一，因为无论什么数据进去都是O(n2)的时间复杂度，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。理论上讲，选择排序可能也是平时排序一般人想到的最多的排序方法了吧。</p><h2 id="插入排序（Insertion-Sort）"><a href="#插入排序（Insertion-Sort）" class="headerlink" title="插入排序（Insertion Sort）"></a>插入排序（Insertion Sort）</h2><p>插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。</p><h3 id="3-1-算法描述"><a href="#3-1-算法描述" class="headerlink" title="3.1 算法描述"></a>3.1 算法描述</h3><p>一般来说，插入排序都采用in-place在数组上实现。具体算法描述如下：</p><ul><li>从第一个元素开始，该元素可以认为已经被排序；</li><li>取出下一个元素，在已经排序的元素序列中从后向前扫描；</li><li>如果该元素（已排序）大于新元素，将该元素移到下一位置；</li><li>重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；</li><li>将新元素插入到该位置后；</li><li>重复步骤2~5。</li></ul><h3 id="3-2-动图演示"><a href="#3-2-动图演示" class="headerlink" title="3.2 动图演示"></a>3.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf3.gif" alt="img"></p><h3 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h3><pre><code class="js">function insertionSort(arr) {    var len = arr.length;    var preIndex, current;    for (var i = 1; i &lt; len; i++) {        preIndex = i - 1;        current = arr[i];        while (preIndex &gt;= 0 &amp;&amp; arr[preIndex] &gt; current) {            arr[preIndex + 1] = arr[preIndex];            preIndex--;        }        arr[preIndex + 1] = current;    }    return arr;}</code></pre><h3 id="3-4-算法分析"><a href="#3-4-算法分析" class="headerlink" title="3.4 算法分析"></a>3.4 算法分析</h3><p>插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p><h2 id="希尔排序（Shell-Sort）"><a href="#希尔排序（Shell-Sort）" class="headerlink" title="希尔排序（Shell Sort）"></a>希尔排序（Shell Sort）</h2><p>1959年Shell发明，第一个突破O(n2)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫<strong>缩小增量排序</strong>。</p><h3 id="4-1-算法描述"><a href="#4-1-算法描述" class="headerlink" title="4.1 算法描述"></a>4.1 算法描述</h3><p>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：</p><ul><li>选择一个增量序列t1，t2，…，tk，其中ti&gt;tj，tk=1；</li><li>按增量序列个数k，对序列进行k 趟排序；</li><li>每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。</li></ul><h3 id="4-2-动图演示"><a href="#4-2-动图演示" class="headerlink" title="4.2 动图演示"></a>4.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf4.gif" alt="img"></p><h3 id="4-3-代码实现"><a href="#4-3-代码实现" class="headerlink" title="4.3 代码实现"></a>4.3 代码实现</h3><pre><code class="js">function shellSort(arr) {    var len = arr.length,        temp,        gap = 1;    while (gap &lt; len / 3) {         // 动态定义间隔序列        gap = gap * 3 + 1;    }    for (gap; gap &gt; 0; gap = Math.floor(gap / 3)) {        for (var i = gap; i &lt; len; i++) {            temp = arr[i];            for (var j = i-gap; j &gt; 0 &amp;&amp; arr[j]&gt; temp; j-=gap) {                arr[j + gap] = arr[j];            }            arr[j + gap] = temp;        }    }    return arr;}</code></pre><h3 id="4-4-算法分析"><a href="#4-4-算法分析" class="headerlink" title="4.4 算法分析"></a>4.4 算法分析</h3><p>希尔排序的核心在于间隔序列的设定。既可以提前设定好间隔序列，也可以动态的定义间隔序列。动态定义间隔序列的算法是《算法（第4版）》的合著者Robert Sedgewick提出的。　</p><h2 id="归并排序（Merge-Sort）"><a href="#归并排序（Merge-Sort）" class="headerlink" title="归并排序（Merge Sort）"></a>归并排序（Merge Sort）</h2><p>归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。 </p><h3 id="5-1-算法描述"><a href="#5-1-算法描述" class="headerlink" title="5.1 算法描述"></a>5.1 算法描述</h3><ul><li>把长度为n的输入序列分成两个长度为n/2的子序列；</li><li>对这两个子序列分别采用归并排序；</li><li>将两个排序好的子序列合并成一个最终的排序序列。</li></ul><h3 id="5-2-动图演示"><a href="#5-2-动图演示" class="headerlink" title="5.2 动图演示"></a>5.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf5.gif" alt="img"></p><h3 id="5-3-代码实现"><a href="#5-3-代码实现" class="headerlink" title="5.3 代码实现"></a>5.3 代码实现</h3><pre><code class="js">function mergeSort(arr) { // 采用自上而下的递归方法    var len = arr.length;    if (len &lt; 2) {        return arr;    }    var middle = Math.floor(len / 2),        left = arr.slice(0, middle),        right = arr.slice(middle);    return merge(mergeSort(left), mergeSort(right));}function merge(left, right) {    var result = [];    while (left.length&gt;0 &amp;&amp; right.length&gt;0) {        if (left[0] &lt;= right[0]) {            result.push(left.shift());        }else {            result.push(right.shift());        }    }    while (left.length)        result.push(left.shift());    while (right.length)        result.push(right.shift());    return result;}</code></pre><h3 id="5-4-算法分析"><a href="#5-4-算法分析" class="headerlink" title="5.4 算法分析"></a>5.4 算法分析</h3><p>归并排序是一种稳定的排序方法。和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是O(nlogn）的时间复杂度。代价是需要额外的内存空间。</p><h2 id="快速排序（Quick-Sort）"><a href="#快速排序（Quick-Sort）" class="headerlink" title="快速排序（Quick Sort）"></a>快速排序（Quick Sort）</h2><p>快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。</p><h3 id="6-1-算法描述"><a href="#6-1-算法描述" class="headerlink" title="6.1 算法描述"></a>6.1 算法描述</h3><p>快速排序使用分治法来把一个串（list）分为两个子串（sub-lists）。具体算法描述如下：</p><ul><li>从数列中挑出一个元素，称为 “基准”（pivot）；</li><li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li><li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</li></ul><h3 id="6-2-动图演示"><a href="#6-2-动图演示" class="headerlink" title="6.2 动图演示"></a>6.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf6.gif" alt="img"></p><h3 id="6-3-代码实现"><a href="#6-3-代码实现" class="headerlink" title="6.3 代码实现"></a>6.3 代码实现</h3><pre><code class="js">function quickSort(arr, left, right) {    var len = arr.length,        partitionIndex,        left =typeof left !=&#39;number&#39; ? 0 : left,        right =typeof right !=&#39;number&#39; ? len - 1 : right;    if (left &lt; right) {        partitionIndex = partition(arr, left, right);        quickSort(arr, left, partitionIndex-1);        quickSort(arr, partitionIndex+1, right);    }    return arr;}function partition(arr, left ,right) {    // 分区操作    var pivot = left,                     // 设定基准值（pivot）        index = pivot + 1;    for (var i = index; i &lt;= right; i++) {        if (arr[i] &lt; arr[pivot]) {            swap(arr, i, index);            index++;        }           }    swap(arr, pivot, index - 1);    return index-1;}function swap(arr, i, j) {    var temp = arr[i];    arr[i] = arr[j];    arr[j] = temp;}</code></pre><h2 id="堆排序（Heap-Sort）"><a href="#堆排序（Heap-Sort）" class="headerlink" title="堆排序（Heap Sort）"></a>堆排序（Heap Sort）</h2><p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。</p><h3 id="7-1-算法描述"><a href="#7-1-算法描述" class="headerlink" title="7.1 算法描述"></a>7.1 算法描述</h3><ul><li>将初始待排序关键字序列(R1,R2….Rn)构建成大顶堆，此堆为初始的无序区；</li><li>将堆顶元素R[1]与最后一个元素R[n]交换，此时得到新的无序区(R1,R2,……Rn-1)和新的有序区(Rn),且满足R[1,2…n-1]&lt;=R[n]；</li><li>由于交换后新的堆顶R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,……Rn-1)调整为新堆，然后再次将R[1]与无序区最后一个元素交换，得到新的无序区(R1,R2….Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为n-1，则整个排序过程完成。</li></ul><h3 id="7-2-动图演示"><a href="#7-2-动图演示" class="headerlink" title="7.2 动图演示"></a>7.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf7.gif" alt="img"></p><h3 id="7-3-代码实现"><a href="#7-3-代码实现" class="headerlink" title="7.3 代码实现"></a>7.3 代码实现</h3><pre><code class="js">var len;   // 因为声明的多个函数都需要数据长度，所以把len设置成为全局变量function buildMaxHeap(arr) {  // 建立大顶堆    len = arr.length;    for (var i = Math.floor(len/2); i &gt;= 0; i--) {        heapify(arr, i);    }}function heapify(arr, i) {    // 堆调整    var left = 2 * i + 1,        right = 2 * i + 2,        largest = i;    if (left &lt; len &amp;&amp; arr[left] &gt; arr[largest]) {        largest = left;    }    if (right &lt; len &amp;&amp; arr[right] &gt; arr[largest]) {        largest = right;    }    if (largest != i) {        swap(arr, i, largest);        heapify(arr, largest);    }}function swap(arr, i, j) {    var temp = arr[i];    arr[i] = arr[j];    arr[j] = temp;}function heapSort(arr) {    buildMaxHeap(arr);    for (var i = arr.length - 1; i &gt; 0; i--) {        swap(arr, 0, i);        len--;        heapify(arr, 0);    }    return arr;}</code></pre><h2 id="计数排序（Counting-Sort）"><a href="#计数排序（Counting-Sort）" class="headerlink" title="计数排序（Counting Sort）"></a>计数排序（Counting Sort）</h2><p>计数排序不是基于比较的排序算法，其核心在于将输入的数据值转化为键存储在额外开辟的数组空间中。 作为一种线性时间复杂度的排序，计数排序要求输入的数据必须是有确定范围的整数。</p><h3 id="8-1-算法描述"><a href="#8-1-算法描述" class="headerlink" title="8.1 算法描述"></a>8.1 算法描述</h3><ul><li>找出待排序的数组中最大和最小的元素；</li><li>统计数组中每个值为i的元素出现的次数，存入数组C的第i项；</li><li>对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）；</li><li>反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1。</li></ul><h3 id="8-2-动图演示"><a href="#8-2-动图演示" class="headerlink" title="8.2 动图演示"></a>8.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf8.gif" alt="img"></p><h3 id="8-3-代码实现"><a href="#8-3-代码实现" class="headerlink" title="8.3 代码实现"></a>8.3 代码实现</h3><pre><code class="js">function countingSort(arr, maxValue) {    var bucket =new Array(maxValue + 1),        sortedIndex = 0;        arrLen = arr.length,        bucketLen = maxValue + 1;    for (var i = 0; i &lt; arrLen; i++) {        if (!bucket[arr[i]]) {            bucket[arr[i]] = 0;        }        bucket[arr[i]]++;    }    for (var j = 0; j &lt; bucketLen; j++) {        while(bucket[j] &gt; 0) {            arr[sortedIndex++] = j;            bucket[j]--;        }    }    return arr;}</code></pre><h3 id="8-4-算法分析"><a href="#8-4-算法分析" class="headerlink" title="8.4 算法分析"></a>8.4 算法分析</h3><p>计数排序是一个稳定的排序算法。当输入的元素是 n 个 0到 k 之间的整数时，时间复杂度是O(n+k)，空间复杂度也是O(n+k)，其排序速度快于任何比较排序算法。当k不是很大并且序列比较集中时，计数排序是一个很有效的排序算法。</p><h2 id="桶排序（Bucket-Sort）"><a href="#桶排序（Bucket-Sort）" class="headerlink" title="桶排序（Bucket Sort）"></a>桶排序（Bucket Sort）</h2><p>桶排序是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。桶排序 (Bucket sort)的工作的原理：假设输入数据服从均匀分布，将数据分到有限数量的桶里，每个桶再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排）。</p><h3 id="9-1-算法描述"><a href="#9-1-算法描述" class="headerlink" title="9.1 算法描述"></a>9.1 算法描述</h3><ul><li>设置一个定量的数组当作空桶；</li><li>遍历输入数据，并且把数据一个一个放到对应的桶里去；</li><li>对每个不是空的桶进行排序；</li><li>从不是空的桶里把排好序的数据拼接起来。 </li></ul><h3 id="9-2-图片演示"><a href="#9-2-图片演示" class="headerlink" title="9.2 图片演示"></a>9.2 图片演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf9.png" alt="img"></p><h3 id="9-3-代码实现"><a href="#9-3-代码实现" class="headerlink" title="9.3 代码实现"></a>9.3 代码实现</h3><pre><code class="js">unction bucketSort(arr, bucketSize) {    if (arr.length === 0) {      return arr;    }    var i;    var minValue = arr[0];    var maxValue = arr[0];    for (i = 1; i &lt; arr.length; i++) {      if (arr[i] &lt; minValue) {          minValue = arr[i];               // 输入数据的最小值      }else if (arr[i] &gt; maxValue) {          maxValue = arr[i];               // 输入数据的最大值      }    }    // 桶的初始化    var DEFAULT_BUCKET_SIZE = 5;           // 设置桶的默认数量为5    bucketSize = bucketSize || DEFAULT_BUCKET_SIZE;    var bucketCount = Math.floor((maxValue - minValue) / bucketSize) + 1;      var buckets =new Array(bucketCount);    for (i = 0; i &lt; buckets.length; i++) {        buckets[i] = [];    }    // 利用映射函数将数据分配到各个桶中    for (i = 0; i &lt; arr.length; i++) {        buckets[Math.floor((arr[i] - minValue) / bucketSize)].push(arr[i]);    }    arr.length = 0;    for (i = 0; i &lt; buckets.length; i++) {        insertionSort(buckets[i]);                     // 对每个桶进行排序，这里使用了插入排序        for (var j = 0; j &lt; buckets[i].length; j++) {            arr.push(buckets[i][j]);                             }    }    return arr;}</code></pre><h3 id="9-4-算法分析"><a href="#9-4-算法分析" class="headerlink" title="9.4 算法分析"></a>9.4 算法分析</h3><p>桶排序最好情况下使用线性时间O(n)，桶排序的时间复杂度，取决与对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。 </p><h2 id="基数排序（Radix-Sort）"><a href="#基数排序（Radix-Sort）" class="headerlink" title="基数排序（Radix Sort）"></a>基数排序（Radix Sort）</h2><p>基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。有时候有些属性是有优先级顺序的，先按低优先级排序，再按高优先级排序。最后的次序就是高优先级高的在前，高优先级相同的低优先级高的在前。</p><h3 id="10-1-算法描述"><a href="#10-1-算法描述" class="headerlink" title="10.1 算法描述"></a>10.1 算法描述</h3><ul><li>取得数组中的最大数，并取得位数；</li><li>arr为原始数组，从最低位开始取每个位组成radix数组；</li><li>对radix进行计数排序（利用计数排序适用于小范围数的特点）；</li></ul><h3 id="10-2-动图演示"><a href="#10-2-动图演示" class="headerlink" title="10.2 动图演示"></a>10.2 动图演示</h3><p><img src="https://img.58cdn.com.cn/escstatic/fecar/pmuse/docmanager/sf10.gif" alt="img"></p><h3 id="10-3-代码实现"><a href="#10-3-代码实现" class="headerlink" title="10.3 代码实现"></a>10.3 代码实现</h3><pre><code class="js">/ LSD Radix Sortvar counter = [];function radixSort(arr, maxDigit) {    var mod = 10;    var dev = 1;    for (var i = 0; i &lt; maxDigit; i++, dev *= 10, mod *= 10) {        for(var j = 0; j &lt; arr.length; j++) {            var bucket = parseInt((arr[j] % mod) / dev);            if(counter[bucket]==null) {                counter[bucket] = [];            }            counter[bucket].push(arr[j]);        }        var pos = 0;        for(var j = 0; j &lt; counter.length; j++) {            var value =null;            if(counter[j]!=null) {                while ((value = counter[j].shift()) !=null) {                      arr[pos++] = value;                }          }        }    }    return arr;}</code></pre><h3 id="10-4-算法分析"><a href="#10-4-算法分析" class="headerlink" title="10.4 算法分析"></a>10.4 算法分析</h3><p>基数排序基于分别排序，分别收集，所以是稳定的。但基数排序的性能比桶排序要略差，每一次关键字的桶分配都需要O(n)的时间复杂度，而且分配之后得到新的关键字序列又需要O(n)的时间复杂度。假如待排数据可以分为d个关键字，则基数排序的时间复杂度将是O(d*2n) ，当然d要远远小于n，因此基本上还是线性级别的。</p><p>基数排序的空间复杂度为O(n+k)，其中k为桶的数量。一般来说n&gt;&gt;k，因此额外空间需要大概n个左右。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS Code 使用小技巧</title>
      <link href="/2018/05/26/vscode-tips/"/>
      <url>/2018/05/26/vscode-tips/</url>
      
        <content type="html"><![CDATA[<h1 id="VS-Code-使用小技巧"><a href="#VS-Code-使用小技巧" class="headerlink" title="VS Code 使用小技巧"></a>VS Code 使用小技巧</h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h3><p>VSCode是微软推出的一款轻量编辑器，采取了和VS相同的UI界面，搭配合适的插件可以优化前端开发的体验。</p><p>布局：左侧是用于展示所要编辑的所有文件和文件夹的文件管理器，依次是<code>**资源管理器**</code>，<code>**搜索</code>，<code>GIT</code>，<code>调试</code>，<code>插件</code>**，右侧是打开文件的编辑区域，最多可同时打开三个编辑区域到侧边。</p><p>底栏：依次是<strong><code>Git Branch</code>，<code>error&amp;warning</code>，<code>编码格式</code></strong>等。</p><a id="more"></a><h3 id="常用插件（待补充）"><a href="#常用插件（待补充）" class="headerlink" title="常用插件（待补充）"></a><strong>常用插件（待补充）</strong></h3><ul><li>HTML Snippets：增强了zen-coding，增加了H5的自动补全，安装后每次打开自动启用(可能与其他插件冲突)。</li><li>Angular 1.x Snippets：增加了AngularJs 1在.html和.js中的代码补全，安装后每次打开自动启用。</li><li>Git Easy：增加了vscode中自带的git操作，安装后按F1调出控制台，输入git easy [options]完成git操作，代替git bash。</li><li>HTML CSS Support: 增加.html中css的代码补全，可以手动增加配置文件来增加外部css中的class补全。详情见插件说明。</li><li>VScode-icons： 美化VSCode的界面，在文件名前面显示小图标，安装后每次打开自动启用。</li><li>Git Blame：可以查看当前光标所在位置的Git Log，最近一次提交的人和时间，显示在左下角，安装后每次打开自动启用。</li><li>HTML CSS Class Completion：扫描项目中的所有css中的class名，在html中自动补全，安装后每次打开自动启用。<strong>注意：如果css过多容易卡死。</strong></li><li>Debugger for Chrome：方便js调试的插件，前端项目在Chrome中运行起来之后，可以直接在VSCode中打断点、查看输出、查看控制台，需要配置launch.json,详情见插件说明。</li><li>background：VSCode美化插件，修改界面背景，详情见插件说明。</li></ul><h3 id="常用快捷键（待补充）"><a href="#常用快捷键（待补充）" class="headerlink" title="常用快捷键（待补充）"></a><strong>常用快捷键（待补充）</strong></h3><h4 id="编辑器与窗口管理"><a href="#编辑器与窗口管理" class="headerlink" title="编辑器与窗口管理"></a><strong>编辑器与窗口管理</strong></h4><p>同时打开多个窗口（查看多个项目）</p><ul><li>打开一个新窗口： Ctrl+Shift+N</li><li>关闭窗口： Ctrl+Shift+W</li></ul><p>同时打开多个编辑器（查看多个文件）</p><ul><li>新建文件 Ctrl+N</li><li>历史打开文件之间切换 Ctrl+Tab，Alt+Left，Alt+Right</li><li>切出一个新的编辑器（最多3个）Ctrl+\，也可以按住Ctrl鼠标点击Explorer里的文件名</li><li>左中右3个编辑器的快捷键Ctrl+1 Ctrl+2 Ctrl+3</li><li><strong>3个编辑器之间循环切换 Ctrl+`</strong></li><li><strong>编辑器换位置，Ctrl+k然后按Left或Right</strong></li></ul><h4 id="代码编辑"><a href="#代码编辑" class="headerlink" title="代码编辑"></a><strong>代码编辑</strong></h4><p><strong>格式调整</strong></p><ul><li>代码行缩进Ctrl+[， Ctrl+]</li><li><strong>折叠打开代码块 Ctrl+Shift+[， Ctrl+Shift+]</strong></li><li>Ctrl+C Ctrl+V如果不选中，默认复制或剪切一整行</li><li>代码格式化：Shift+Alt+F，或Ctrl+Shift+P后输入format code</li><li>修剪空格Ctrl+Shift+X</li><li>上下移动一行： Alt+Up 或 Alt+Down</li><li><strong>向上向下复制一行： Shift+Alt+Up或Shift+Alt+Down</strong></li><li>在当前行下边插入一行Ctrl+Enter</li><li>在当前行上方插入一行Ctrl+Shift+Enter</li></ul><p><strong>光标相关</strong></p><ul><li>移动到行首：Home</li><li>移动到行尾：End</li><li>移动到文件结尾：Ctrl+End</li><li>移动到文件开头：Ctrl+Home</li><li>移动到后半个括号 Ctrl+Shift+]</li><li>选中当前行Ctrl+i（双击）</li><li>选择从光标到行尾Shift+End</li><li>选择从行首到光标处Shift+Home</li><li><strong>删除光标右侧的所有字Ctrl+Delete</strong></li><li>Shrink/expand selection： Shift+Alt+Left和Shift+Alt+Right</li><li>Multi-Cursor：可以连续选择多处，然后一起修改，Alt+Click添加cursor或者Ctrl+Alt+Down 或 Ctrl+Alt+Up</li><li>同时选中所有匹配的Ctrl+Shift+L</li><li>Ctrl+D下一个匹配的也被选中(被我自定义成删除当前行了，见下边Ctrl+Shift+K)</li><li><strong>回退上一个光标操作Ctrl+U</strong></li></ul><p><strong>重构代码</strong></p><ul><li>跳转到定义处：F12</li><li>定义处缩略图：只看一眼而不跳转过去Alt+F12</li><li><strong>列出所有的引用：Shift+F12</strong></li><li>同时修改本文件中所有匹配的：Ctrl+F12</li><li>重命名：比如要修改一个方法名，可以选中后按F2，输入新的名字，回车，会发现所有的文件都修改过了。</li><li>跳转到下一个Error或Warning：当有多个错误时可以按F8逐个跳转</li><li>查看diff 在explorer里选择文件右键 Set file to compare，然后需要对比的文件上右键选择Compare with ‘file_name_you_chose’.</li></ul><p><strong>查找替换</strong></p><ul><li>查找 Ctrl+F</li><li>查找替换 Ctrl+H</li><li>整个文件夹中查找 Ctrl+Shift+F</li></ul><p><strong>显示相关</strong></p><ul><li>全屏：F11</li><li>zoomIn/zoomOut：Ctrl + =/Ctrl + -</li><li>侧边栏显/隐：Ctrl+B</li><li><strong>预览markdown Ctrl+Shift+V</strong></li></ul><p><strong>其他</strong></p><ul><li>自动保存：File -&gt; AutoSave ，或者Ctrl+Shift+P，输入 auto</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode-sync-setting</title>
      <link href="/2018/05/25/vscode-sync-setting/"/>
      <url>/2018/05/25/vscode-sync-setting/</url>
      
        <content type="html"><![CDATA[<h2 id="VSCode配置的同步设置，实现不同设备上的统一"><a href="#VSCode配置的同步设置，实现不同设备上的统一" class="headerlink" title="VSCode配置的同步设置，实现不同设备上的统一"></a>VSCode配置的同步设置，实现不同设备上的统一</h2><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><ul><li>准备工作：电脑上需安装VSCode，拥有一个github账户。实现同步的功能主要依赖于VSCode插件<code>Settings Sync</code></li><li><strong>Setting Sync 可同步包含的所有扩展和完整的用户文件夹</strong> <ul><li>设置文件</li><li>快捷键设置文件</li><li>VSCode扩展设置</li><li>Launch File</li></ul></li></ul><a id="more"></a><h3 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h3><h4 id="安装-同步插件”Settings-Sync”"><a href="#安装-同步插件”Settings-Sync”" class="headerlink" title="安装 同步插件”Settings Sync”"></a>安装 同步插件”Settings Sync”</h4><h4 id="生成token"><a href="#生成token" class="headerlink" title="生成token"></a>生成token</h4><ul><li>登录Github账户设置，头像 —&gt; Settings 在左侧（最后一个） Developer settings —&gt; Personal access tokens；</li></ul><p><img src="https://i.loli.net/2018/05/26/5b096f4978275.png" alt="图片观看"></p><ul><li>点击按钮 Generate new token 新增一个token</li></ul><p><img src="https://i.loli.net/2018/05/26/5b096f6c74ee0.png" alt="流程一"></p><p><img src="https://i.loli.net/2018/05/26/5b096f835206e.png" alt="流程二"></p><p><img src="https://i.loli.net/2018/05/26/5b096f9a9b3de.png" alt="流程三"></p><p><strong>提示</strong>：记住生成的token值，最好找个笔记保存下来 。</p><h4 id="回到VSCode配置将token配置到本地"><a href="#回到VSCode配置将token配置到本地" class="headerlink" title="回到VSCode配置将token配置到本地"></a>回到VSCode配置将token配置到本地</h4><p>(Sync: Update / Uplaod Settings) <code>Shift + Alt + U</code> 在弹窗里输入你的token， 回车后会生成<code>syncSummary.txt</code>文件</p><p><img src="https://i.loli.net/2018/05/26/5b096fb7323ae.png" alt="img"></p><p>syncSummary.txt文件会存储VSCode的设置及所安装的插件列表</p><p>此外可以将自己的token分享到自己的团队里面去，这样团队可以共用一套设置。 </p><h4 id="同步与下载"><a href="#同步与下载" class="headerlink" title="同步与下载"></a>同步与下载</h4><ul><li><p>设置上同步下载设置</p><ul><li><code>Shift + Alt + U</code>，同步本地的配置更新到github；</li><li><code>Shift + Alt + D</code> ，在弹窗里输入你的gist值，稍后片刻便可同步成功</li></ul></li><li><p>要重置同步设置，变更其它token</p><ul><li><code>Ctrl+P</code> 弹出输入&gt;sync，即可重新配置你的其它token来同步</li></ul></li></ul><h3 id="异端设置"><a href="#异端设置" class="headerlink" title="异端设置"></a>异端设置</h3><p><img src="https://i.loli.net/2018/05/26/5b096fcdb900c.png" alt="VSCode同步方案问题一"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BlueLake博客主题的详细配置</title>
      <link href="/2018/05/09/hexo-themes-update-bluelake/"/>
      <url>/2018/05/09/hexo-themes-update-bluelake/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><h3 id="1-1-安装主题"><a href="#1-1-安装主题" class="headerlink" title="1.1 安装主题"></a>1.1 安装主题</h3><pre><code>git clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/BlueLake</code></pre><h3 id="1-2-安装主题渲染器"><a href="#1-2-安装主题渲染器" class="headerlink" title="1.2 安装主题渲染器"></a>1.2 安装主题渲染器</h3><p>BlueLake是基于jade和stylus写的，所以需要安装<code>hexo-renderer-jade</code>和<code>hexo-renderer-stylus</code>来渲染。</p><pre><code>npm install hexo-renderer-jade@0.3.0 --savenpm install hexo-renderer-stylus --save</code></pre><h3 id="1-3-启用主题"><a href="#1-3-启用主题" class="headerlink" title="1.3 启用主题"></a>1.3 启用主题</h3><p>打开根<code>_config.yml</code>配置文件，找到theme字段，将其值改为BlueLake(先确认主题文件夹名称是否为BlueLake)。</p><pre><code>// 根 _config.ymltheme: BlueLake</code></pre><h3 id="1-4-验证"><a href="#1-4-验证" class="headerlink" title="1.4 验证"></a>1.4 验证</h3><p>首先启动 Hexo 本地站点，并开启调试模式：</p><pre><code>hexo s --debug</code></pre><p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：</p><pre><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。</code></pre><h3 id="1-5-更新主题"><a href="#1-5-更新主题" class="headerlink" title="1.5 更新主题"></a>1.5 更新主题</h3><p>今后若主题添加了新功能正是您需要的，您可以直接git pull来更新主题。</p><pre><code>cd themes/BlueLakegit pull</code></pre><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-设置语言"><a href="#2-1-设置语言" class="headerlink" title="2.1 设置语言"></a>2.1 设置语言</h3><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在根_config.yml配置如下：</p><pre><code>// 根 _config.ymllanguage: zh-CN</code></pre><h3 id="2-2-设置菜单"><a href="#2-2-设置菜单" class="headerlink" title="2.2 设置菜单"></a>2.2 设置菜单</h3><pre><code>// 打开主题找到， themes/BlueLake/_config.ymlmenu:  - page: home    directory: .    icon: fa-home  - page: archive    directory: archives/    icon: fa-archive  # - page: about  #   directory: about/  #   icon: fa-user  - page: rss    directory: atom.xml    icon: fa-rss</code></pre><h4 id="2-2-1-添加about页面"><a href="#2-2-1-添加about页面" class="headerlink" title="2.2.1 添加about页面"></a>2.2.1 添加about页面</h4><pre><code>// 此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：hexo new page &#39;about&#39;// 打开主题找到， themes/BlueLake/_config.yml# About pageabout:  photo_url: ## 头像的链接地址 https://avatars0.githubusercontent.com/u/29102045?s=460&amp;v=4  items:  - label: email    url: ## 个人邮箱    title: ## 邮箱用户名  - label: github    url: ## github主页    title: ## github用户名  - label: weibo    url: ## weibo主页    title: ## weibo用户名# - label: twitter#   url: #   title:# - label: facebook#   url:#   title:</code></pre><h4 id="2-2-2-安装-RSS-订阅-和-sitemap-网站地图-插件"><a href="#2-2-2-安装-RSS-订阅-和-sitemap-网站地图-插件" class="headerlink" title="2.2.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件"></a>2.2.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件</h4><ul><li><p>在根目录下打开命令行窗口：</p><pre><code>npm install hexo-generator-feed --savenpm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save</code></pre></li><li><p>添加主题_config.yml配置：</p><pre><code>//  themes/BlueLake/_config.yml </code></pre></li></ul><p>Plugins:<br>  hexo-generator-feed<br>  hexo-generator-sitemap<br>  hexo-generator-baidu-sitemap<br>feed:<br>  type: atom<br>  path: atom.xml<br>  limit: 20<br>sitemap:<br>  path: sitemap.xml<br>baidusitemap:<br>  path: baidusitemap.xml</p><pre><code>### 2.3 添加本地搜索安装插件`hexo-generator-json-content`来创建JSON数据文件：</code></pre><p> npm install <a href="mailto:hexo-generator-json-content@2.2.0" target="_blank" rel="noopener">hexo-generator-json-content@2.2.0</a> –save</p><pre><code>然后在根_config.yml添加配置：</code></pre><p>// 根_config.yml</p><p>jsonContent:<br>  meta: false<br>  pages: false<br>  posts:<br>    title: true<br>    date: true<br>    path: true<br>    text: true<br>    raw: false<br>    content: false<br>    slug: false<br>    updated: false<br>    comments: false<br>    link: false<br>    permalink: false<br>    excerpt: false<br>    categories: false<br>    tags: true</p><pre><code>最后在主题themes/BlueLake/_config.yml添加配置：</code></pre><p>//  themes/BlueLake/_config.yml<br>local_search: true</p><pre><code>### 2.4 其他配置主题themes/BlueLake/_config.yml添加其他配置：</code></pre><p>//  themes/BlueLake/_config.yml<br>// show_category_count——是否显示分类下的文章数。<br>// widgets_on_small_screens——是否在小屏显示侧边栏，若true,则侧边栏挂件将显示在底部。</p><p>show_category_count: true<br>widgets_on_small_screens: true<br>```</p><h2 id="3-扩展"><a href="#3-扩展" class="headerlink" title="3. 扩展"></a>3. 扩展</h2><ul><li>添加评论</li><li>百度统计</li><li>卜算子阅读次数统计</li><li>微博秀</li></ul><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="http://chaoo.oschina.io/2016/12/29/BlueLake%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE.html" target="_blank" rel="noopener">BlueLake博客主题的详细配置</a></li><li>更多配置参见 <a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="noopener">BlueLake主题github</a>  可以点个star啦</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> theme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yilia博客主题的详情配置</title>
      <link href="/2018/05/09/hexo-themes-update-yilia/"/>
      <url>/2018/05/09/hexo-themes-update-yilia/</url>
      
        <content type="html"><![CDATA[<h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>默认主题比较丑哒，在这里可以选择符合自己风格的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方主题</a><br>比较推荐的主题之一：<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a></p><a id="more"></a><ul><li><p>下载主题</p><pre><code class="bash">// 进入Hexo的安装目录，右键打开 Git Bash Here$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre></li><li><p>修改配置</p><pre><code class="bash">修改`_config.yml`中的`theme: landscape`改为`theme: yilia`，然后重新执行`hexo generate`来重新生成。运行查看本地效果 &#39;hexo server&#39;如果出现一些莫名其妙的问题，可以先执行`hexo clean`来清理一下public的内容，然后再来重新生成和发布。</code></pre></li><li><p>上传Github</p><pre><code class="bash">// Hexo的安装目录，右键打开 Git Bash Here$ hexo deploy         // 就会将本次有改动的代码全部提交，没有改动的不会.</code></pre></li></ul><h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><ul><li><p>常用命令</p><pre><code>hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）hexo deploy #部署到GitHubhexo help  # 查看帮助hexo version  #查看Hexo的版本</code></pre></li><li><p>缩写命令</p><pre><code>hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy</code></pre></li><li><p>组合命令</p><pre><code>hexo s -g #生成并本地预览hexo d -g #生成并上传</code></pre></li></ul><h2 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h2><h3 id="创建一篇新文章"><a href="#创建一篇新文章" class="headerlink" title="创建一篇新文章"></a>创建一篇新文章</h3><p>定位到Hexo根目录，打开 Git Bash Here，执行命令</p><pre><code class="bash">$ hexo new &#39;my-first-blog&#39;  // 文件名中间不能出现空格</code></pre><p>hexo会帮我们在<code>...\Hexo\source\_posts</code>下生成相关md文件</p><pre><code class="bash">INFO  Created: D:\Hexo\source\_posts\my-first-blog.md</code></pre><p>用markdown编辑器打开这个文件，就可以进行编辑了</p><pre><code>// 默认生成如下title: my-first-blogdate: 2018-05-09 14:19:39tags: </code></pre><p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><p>一般完整的格式如下</p><pre><code>---title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下是正文..........</code></pre><h3 id="如何让博文列表不显示全部内容"><a href="#如何让博文列表不显示全部内容" class="headerlink" title="如何让博文列表不显示全部内容"></a>如何让博文列表不显示全部内容</h3><p>此主题默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？<br>答案是在合适的位置加上<code>&lt;!--more--&gt;</code>即可，例如：</p><pre><code># 前言使用github pages服务搭建博客的好处有：1. 全是静态文件，访问速度快；2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；&lt;!--more--&gt;4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；5. 博客内容可以轻松打包、转移、发布到其它平台；6. 等等；</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa#xiu-gai-zhu-ti" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a></li><li>更多配置参见 <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">Yilia主题github</a>  可以点个star啦</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> theme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 入门初级指南</title>
      <link href="/2018/05/09/hexo-getting-start/"/>
      <url>/2018/05/09/hexo-getting-start/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前边"><a href="#写在前边" class="headerlink" title="写在前边"></a>写在前边</h2><p>使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li></ol><a id="more"></a><ol start="4"><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><ul><li>打开命令行，在命令行中输入以下命令:<br><code>npm install -g hexo-cli</code> </li><li>安装Hexo的Git插件（如果不安装这个插件，会导致Hexo博客内容无法发布）<br><code>npm install hexo-deployer-git --save</code></li></ul><h2 id="本地搭建Hexo博客"><a href="#本地搭建Hexo博客" class="headerlink" title="本地搭建Hexo博客"></a>本地搭建Hexo博客</h2><ul><li><p>打开命令行，输入以下命令，用于创建Hexo博客目录。</p><pre><code>  // 指的是用于创建Hexo博客的目录，例如 e:/hexo  hexo init &lt;folder&gt;  hexo init e:/Hexo </code></pre></li><li><p>进入创建的项目，打开命令行，输入如下命令</p><pre><code>  npm install</code></pre></li><li><p>初始化完毕后，可以在命令行中输入以下命令，启动本地Hexo博客程序。 </p><pre><code>  hexo server  // 或者 hexo s</code></pre></li><li><p>命令行出现如下信息，打开浏览器，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 就可以访问本地的Hexo博客程序了。</p><pre><code>  $ hexo s  INFO  Start processing  INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</code></pre></li></ul><h2 id="发布博客到GitHub"><a href="#发布博客到GitHub" class="headerlink" title="发布博客到GitHub"></a><strong>发布博客到GitHub</strong></h2><ul><li><p>注册GitHub账户</p></li><li><p>创建GitHub工程</p></li><li><p>配置Hexo程序</p><pre><code>// 进入Hexo的安装目录，打开_config.yml配置文件。# Sitetitle: 网站名称subtitle: 网站简介description:author: 作者language:timezone:# URL## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;url: 网站域名  (例如：https://marlonchiu.github.io/)root: /permalink: :category/:title.htmlpermalink_defaults:...# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy:  type: git  repository: GitHub新建工程的地址（例如 git@github.com:marlonchiu/marlonchiu.github.io.git）  branch: master</code></pre></li></ul><h2 id="发布Hexo到GitHub"><a href="#发布Hexo到GitHub" class="headerlink" title="发布Hexo到GitHub"></a>发布Hexo到GitHub</h2><ul><li><p>在Hexo的安装目录中，鼠标右键选择”Git Bash Here”选项。</p></li><li><p>在Git命令行中，输入以下命令。</p><pre><code>// 生成hexo本地目录结构hexo generate// 将hexo本地目录上传至GitCafehexo deploy</code></pre></li></ul><blockquote><p>试水详情请参照：<a href="http://www.longestory.com/2017/12/29/create-hexo-deploy-to-github.html" target="_blank" rel="noopener">龙云全栈</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>没有仪式感的人生，永远都是灰头土脸</title>
      <link href="/2018/05/09/sense-of-ritual/"/>
      <url>/2018/05/09/sense-of-ritual/</url>
      
        <content type="html"><![CDATA[<p>　　村上春树说：仪式是一件很重要的事情。</p>  <a id="more"></a><p>　　喝牛奶时，你特意替我擦掉嘴边的白泡沫，是仪式。<br>　　出门时，你特意把我的领带给调整好，是仪式。<br>　　走路时，你特意蹲下来帮我系好鞋带，是仪式。<br>　　逛街时，你特意记得我喜欢的衣服买来送给我，是仪式。<br>　　别人生日你切蛋糕下去的第一刀是仪式，拆掉新书的塑料包装也是仪式。<br>　　其实仪式就是把本来单调普通的事情，变得不一样。<br>　　仪式是让我们对所在意的事情，怀有敬畏。</p><p>　　01. 婚姻里的仪式感。</p><p>　　普华永道的老总唐徽，她曾说结婚十几年了，她雷打不动的规定就是每周五和先生约会。她老公是一个喜欢吃意大利餐的美国男人，所以他们每周五晚餐都会坐在高档的意大利餐厅享受美食。<br>　　她说仪式感是婚姻中不可或缺的元素，因为它会时时刻刻提醒夫妻俩人，必须认真、敬畏得去经营婚姻。<br>　　朋友A是一个婚姻心理咨询师，他和说曾说过一个案例。丈夫和妻子结婚8年多了，每次遇到重要的节日时，丈夫提议出去庆祝一下，而妻子每次都说要花多少多少钱，要节省钱就不去了，结婚8年竟然难忘的日子没有几个。<br>　　后来他们离婚了，丈夫遇到节日都会欢欢喜喜和新的伴侣出去庆祝，在新的婚姻里如鱼得水。可是这时，前妻却无法释怀了，生活一直过得不好，常常跑心理咨询室解决心理问题。<br>　　仪式感是获得安全感的源泉之一。<br>　　很多女孩子描述恋爱细节都会这样说：我记得那天我生日，他特地来看我，陪我在哪里做了什么，送了我什么礼物，对我说了什么话，他对我很用心，我觉得很幸福。<br>　　从感性的角度，在某事某刻特别用心做某事，带有仪式感，让人刻骨铭心。<br>　　女孩子都向往一场浪漫的婚礼，很多细节都会有特别的要求，在那个仪式上彼此说着爱的誓言，一生中记忆最深的莫过于此吧。<br>　　因为有仪式感，你才记得那天的阳光和白云，还有他身旁的微风和眼中的光芒。</p><p>　　02. 生活里的仪式感。</p><p>　　记得一个牛津大学毕业的著名学者说过他上学的事情：在他上高中的时候，父亲每次接他、送他的前一天，都会认真去洗一次车，而且要洗得非常干净。<br>　　父亲的洗车让他觉得上学有了仪式感，也特别用心。<br>　　在我家里有一个不成文的规定，就是：一家人吃饭必须围着桌子一起吃饭，不能看电视，不能一个个东奔西跑。<br>　　母亲常说：民以食为天，对于食物我们应该怀有敬畏心理，人家老外吃饭前还要祷告咧，家的意思不就是一家人常常在一起吃饭么！<br>　　家里不管是哪个人过生日，父母必将准备丰盛的菜肴，一家人都要穿上最好的衣服，来庆祝这个特别的节日，像是参加一个重大的仪式。<br>　　母亲还有一个歪理：连吃饭都不能好好聚在一起的家庭，走不远。<br>　　于是我开始观察了几个街坊邻居，居然还真的是母亲说的那样。就拿我家的邻居来说吧，妇女做完饭就会端着饭跑到外面去和别人聊天，子女端着饭边看电视看吃，丈夫端着饭坐在门口台阶上。<br>　　果然，没几日妇女就和别的男人跑了，过了一段时间又回来了。于是野男人和家里的男人引发了战争，女儿写信给母亲要断绝母女关系。<br>　　从此这个家庭一地鸡毛，狼狈不堪，争吵的响声常常传到我家里。<br>　　一家人一起认真吃饭，这是我们家里的仪式感，每当我想家的时候，出现最多的画面就是一家人开开心心吃饭的场景。<br>　　第三季《唐顿庄园》中有一次因为炉子坏了，唐顿第一次放弃了繁文缛节。他和别人谈论此事时，显得对生活中的仪式感非常着迷。<br>　　他说：“你厌倦了生活中的格调，就是厌倦了生活。”</p><p>　　我们成长、我们毕业、我们离开，我们需要一个个的仪式来对过去的自己告别，然后重新开始新的生活。<br>　　王阳明名言：你未看此花时，此花与汝心同归于寂。你来看此花时，则此花颜色一时明白起来。<br>　　一切繁杂里才能照见简单，一切世俗中才能照见脱俗，一切喧闹中才能照见宁静。在如今缺乏仪式感的国度里，我们会失去很多觉察的机会。<br>　　不敬天地，不敬鬼神，觉察自然也会离我们越来越远。<br>　　仪式感之所以重要，是通过不断暗示自己，强化精神，能够让我们继续坚持枯燥的生活，在遇到变故或者彷徨无助的时候，带来希望。</p><p>   文/肖卓</p>]]></content>
      
      
      <categories>
          
          <category> 生活感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 仪式感 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
